using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;

namespace CarWebApi.HttpHelper
{
    public class HttpContentHelper
    {
        public string GetContentType(string path)
        {
            var types = GetMimeTypes();
            var ext = Path.GetExtension(path).ToLowerInvariant();
            return types[ext].MediaType;
        }

        private Dictionary<string, MimeType> GetMimeTypes()
        {
            List<MimeType> listMimeType = GetListMimeTypes();

            var retVal = listMimeType.ToDictionary(x => x.FileExtension, x => x);
            return retVal;
        }

        private List<MimeType> GetListMimeTypes()
        {
            List<MimeType> listMimeType = new List<MimeType>();
            listMimeType.Add(new MimeType() { Name = "3D Crossword Plugin", MediaType = "application/vnd.hzn-3d-crossword", FileExtension = ".x3d", Details = "IANA: 3D Crossword Plugin" });
            listMimeType.Add(new MimeType() { Name = "3GP", MediaType = "video/3gpp", FileExtension = ".3gp", Details = "Wikipedia: 3GP" });
            listMimeType.Add(new MimeType() { Name = "3GP2", MediaType = "video/3gpp2", FileExtension = ".3g2", Details = "Wikipedia: 3G2" });
            listMimeType.Add(new MimeType() { Name = "3GPP MSEQ File", MediaType = "application/vnd.mseq", FileExtension = ".mseq", Details = "IANA: 3GPP MSEQ File" });
            listMimeType.Add(new MimeType() { Name = "3M Post It Notes", MediaType = "application/vnd.3m.post-it-notes", FileExtension = ".pwn", Details = "IANA: 3M Post It Notes" });
            listMimeType.Add(new MimeType() { Name = "3rd Generation Partnership Project - Pic Large", MediaType = "application/vnd.3gpp.pic-bw-large", FileExtension = ".plb", Details = "3GPP" });
            listMimeType.Add(new MimeType() { Name = "3rd Generation Partnership Project - Pic Small", MediaType = "application/vnd.3gpp.pic-bw-small", FileExtension = ".psb", Details = "3GPP" });
            listMimeType.Add(new MimeType() { Name = "3rd Generation Partnership Project - Pic Var", MediaType = "application/vnd.3gpp.pic-bw-var", FileExtension = ".pvb", Details = "3GPP" });
            listMimeType.Add(new MimeType() { Name = "3rd Generation Partnership Project - Transaction Capabilities Application Part", MediaType = "application/vnd.3gpp2.tcap", FileExtension = ".tcap", Details = "3GPP" });
            listMimeType.Add(new MimeType() { Name = "7-Zip", MediaType = "application/x-7z-compressed", FileExtension = ".7z", Details = "Wikipedia: 7-Zip" });
            listMimeType.Add(new MimeType() { Name = "AbiWord", MediaType = "application/x-abiword", FileExtension = ".abw", Details = "Wikipedia: AbiWord" });
            listMimeType.Add(new MimeType() { Name = "Ace Archive", MediaType = "application/x-ace-compressed", FileExtension = ".ace", Details = "Wikipedia: ACE" });
            listMimeType.Add(new MimeType() { Name = "Active Content Compression", MediaType = "application/vnd.americandynamics.acc", FileExtension = ".acc", Details = "IANA: Active Content Compression" });
            listMimeType.Add(new MimeType() { Name = "ACU Cobol", MediaType = "application/vnd.acucobol", FileExtension = ".acu", Details = "IANA: ACU Cobol" });
            listMimeType.Add(new MimeType() { Name = "ACU Cobol", MediaType = "application/vnd.acucorp", FileExtension = ".atc", Details = "IANA: ACU Cobol" });
            listMimeType.Add(new MimeType() { Name = "Adaptive differential pulse-code modulation", MediaType = "audio/adpcm", FileExtension = ".adp", Details = "Wikipedia: ADPCM" });
            listMimeType.Add(new MimeType() { Name = "Adobe (Macropedia) Authorware - Binary File", MediaType = "application/x-authorware-bin", FileExtension = ".aab", Details = "Wikipedia: Authorware" });
            listMimeType.Add(new MimeType() { Name = "Adobe (Macropedia) Authorware - Map", MediaType = "application/x-authorware-map", FileExtension = ".aam", Details = "Wikipedia: Authorware" });
            listMimeType.Add(new MimeType() { Name = "Adobe (Macropedia) Authorware - Segment File", MediaType = "application/x-authorware-seg", FileExtension = ".aas", Details = "Wikipedia: Authorware" });
            listMimeType.Add(new MimeType() { Name = "Adobe AIR Application", MediaType = "application/vnd.adobe.air-application-installer-package+zip", FileExtension = ".air", Details = "Building AIR Applications" });
            listMimeType.Add(new MimeType() { Name = "Adobe Flash", MediaType = "application/x-shockwave-flash", FileExtension = ".swf", Details = "Wikipedia: Adobe Flash" });
            listMimeType.Add(new MimeType() { Name = "Adobe Flex Project", MediaType = "application/vnd.adobe.fxp", FileExtension = ".fxp", Details = "IANA: Adobe Flex Project" });
            listMimeType.Add(new MimeType() { Name = "Adobe Portable Document Format", MediaType = "application/pdf", FileExtension = ".pdf", Details = "Adobe PDF" });
            listMimeType.Add(new MimeType() { Name = "Adobe PostScript Printer Description File Format", MediaType = "application/vnd.cups-ppd", FileExtension = ".ppd", Details = "IANA: Cups" });
            listMimeType.Add(new MimeType() { Name = "Adobe Shockwave Player", MediaType = "application/x-director", FileExtension = ".dir", Details = "Wikipedia: Adobe Shockwave Player" });
            listMimeType.Add(new MimeType() { Name = "Adobe XML Data Package", MediaType = "application/vnd.adobe.xdp+xml", FileExtension = ".xdp", Details = "Wikipedia: XML Data Package" });
            listMimeType.Add(new MimeType() { Name = "Adobe XML Forms Data Format", MediaType = "application/vnd.adobe.xfdf", FileExtension = ".xfdf", Details = "Wikipedia: XML Portable Document Format" });
            listMimeType.Add(new MimeType() { Name = "Advanced Audio Coding (AAC)", MediaType = "audio/x-aac", FileExtension = ".aac", Details = "Wikipedia: AAC" });
            listMimeType.Add(new MimeType() { Name = "Ahead AIR Application", MediaType = "application/vnd.ahead.space", FileExtension = ".ahead", Details = "IANA: Ahead AIR Application" });
            listMimeType.Add(new MimeType() { Name = "AirZip FileSECURE", MediaType = "application/vnd.airzip.filesecure.azf", FileExtension = ".azf", Details = "IANA: AirZip" });
            listMimeType.Add(new MimeType() { Name = "AirZip FileSECURE", MediaType = "application/vnd.airzip.filesecure.azs", FileExtension = ".azs", Details = "IANA: AirZip" });
            listMimeType.Add(new MimeType() { Name = "Amazon Kindle eBook format", MediaType = "application/vnd.amazon.ebook", FileExtension = ".azw", Details = "Kindle Direct Publishing" });
            listMimeType.Add(new MimeType() { Name = "AmigaDE", MediaType = "application/vnd.amiga.ami", FileExtension = ".ami", Details = "IANA: Amiga" });
            listMimeType.Add(new MimeType() { Name = "Andrew Toolkit", MediaType = "application/andrew-inset", FileExtension = "N/A", Details = "IANA - Andrew Inset" });
            listMimeType.Add(new MimeType() { Name = "Android Package Archive", MediaType = "application/vnd.android.package-archive", FileExtension = ".apk", Details = "Wikipedia: APK File Format" });
            listMimeType.Add(new MimeType() { Name = "ANSER-WEB Terminal Client - Certificate Issue", MediaType = "application/vnd.anser-web-certificate-issue-initiation", FileExtension = ".cii", Details = "IANA: ANSWER-WEB" });
            listMimeType.Add(new MimeType() { Name = "ANSER-WEB Terminal Client - Web Funds Transfer", MediaType = "application/vnd.anser-web-funds-transfer-initiation", FileExtension = ".fti", Details = "IANA: ANSWER-WEB" });
            listMimeType.Add(new MimeType() { Name = "Antix Game Player", MediaType = "application/vnd.antix.game-component", FileExtension = ".atx", Details = "IANA: Antix Game Component" });
            listMimeType.Add(new MimeType() { Name = "Apple Disk Image", MediaType = "application/x-apple-diskimage", FileExtension = ".dmg", Details = "Apple Disk Image" });
            listMimeType.Add(new MimeType() { Name = "Apple Installer Package", MediaType = "application/vnd.apple.installer+xml", FileExtension = ".mpkg", Details = "IANA: Apple Installer" });
            listMimeType.Add(new MimeType() { Name = "Applixware", MediaType = "application/applixware", FileExtension = ".aw", Details = "Vistasource" });
            listMimeType.Add(new MimeType() { Name = "Archipelago Lesson Player", MediaType = "application/vnd.hhe.lesson-player", FileExtension = ".les", Details = "IANA: Archipelago Lesson Player" });
            listMimeType.Add(new MimeType() { Name = "Arista Networks Software Image", MediaType = "application/vnd.aristanetworks.swi", FileExtension = ".swi", Details = "IANA: Arista Networks Software Image" });
            listMimeType.Add(new MimeType() { Name = "Assembler Source File", MediaType = "text/x-asm", FileExtension = ".s", Details = "Wikipedia: Assembly" });
            listMimeType.Add(new MimeType() { Name = "Atom Publishing Protocol", MediaType = "application/atomcat+xml", FileExtension = ".atomcat", Details = "RFC 5023" });
            listMimeType.Add(new MimeType() { Name = "Atom Publishing Protocol Service Document", MediaType = "application/atomsvc+xml", FileExtension = ".atomsvc", Details = "RFC 5023" });
            listMimeType.Add(new MimeType() { Name = "Atom Syndication Format", MediaType = "application/atom+xml", FileExtension = ".atom, .xml", Details = "RFC 4287" });
            listMimeType.Add(new MimeType() { Name = "Attribute Certificate", MediaType = "application/pkix-attr-cert", FileExtension = ".ac", Details = "RFC 5877" });
            listMimeType.Add(new MimeType() { Name = "Audio Interchange File Format", MediaType = "audio/x-aiff", FileExtension = ".aif", Details = "Wikipedia: Audio Interchange File Format" });
            listMimeType.Add(new MimeType() { Name = "Audio Video Interleave (AVI)", MediaType = "video/x-msvideo", FileExtension = ".avi", Details = "Wikipedia: AVI" });
            listMimeType.Add(new MimeType() { Name = "Audiograph", MediaType = "application/vnd.audiograph", FileExtension = ".aep", Details = "IANA: Audiograph" });
            listMimeType.Add(new MimeType() { Name = "AutoCAD DXF", MediaType = "image/vnd.dxf", FileExtension = ".dxf", Details = "Wikipedia: AutoCAD DXF" });
            listMimeType.Add(new MimeType() { Name = "Autodesk Design Web Format (DWF)", MediaType = "model/vnd.dwf", FileExtension = ".dwf", Details = "Wikipedia: Design Web Format" });
            listMimeType.Add(new MimeType() { Name = "BAS Partitur Format", MediaType = "text/plain-bas", FileExtension = ".par", Details = "Phonetik BAS" });
            listMimeType.Add(new MimeType() { Name = "Binary CPIO Archive", MediaType = "application/x-bcpio", FileExtension = ".bcpio", Details = "Wikipedia: cpio" });
            listMimeType.Add(new MimeType() { Name = "Binary Data", MediaType = "application/octet-stream", FileExtension = ".bin", Details = "" });
            listMimeType.Add(new MimeType() { Name = "Bitmap Image File", MediaType = "image/bmp", FileExtension = ".bmp", Details = "Wikipedia: BMP File Format" });
            listMimeType.Add(new MimeType() { Name = "BitTorrent", MediaType = "application/x-bittorrent", FileExtension = ".torrent", Details = "Wikipedia: BitTorrent" });
            listMimeType.Add(new MimeType() { Name = "Blackberry COD File", MediaType = "application/vnd.rim.cod", FileExtension = ".cod", Details = "" });
            listMimeType.Add(new MimeType() { Name = "Blueice Research Multipass", MediaType = "application/vnd.blueice.multipass", FileExtension = ".mpm", Details = "IANA: Multipass" });
            listMimeType.Add(new MimeType() { Name = "BMI Drawing Data Interchange", MediaType = "application/vnd.bmi", FileExtension = ".bmi", Details = "IANA: BMI" });
            listMimeType.Add(new MimeType() { Name = "Bourne Shell Script", MediaType = "application/x-sh", FileExtension = ".sh", Details = "Wikipedia: Bourne Shell" });
            listMimeType.Add(new MimeType() { Name = "BTIF", MediaType = "image/prs.btif", FileExtension = ".btif", Details = "IANA: BTIF" });
            listMimeType.Add(new MimeType() { Name = "BusinessObjects", MediaType = "application/vnd.businessobjects", FileExtension = ".rep", Details = "IANA: BusinessObjects" });
            listMimeType.Add(new MimeType() { Name = "Bzip Archive", MediaType = "application/x-bzip", FileExtension = ".bz", Details = "Wikipedia: Bzip" });
            listMimeType.Add(new MimeType() { Name = "Bzip2 Archive", MediaType = "application/x-bzip2", FileExtension = ".bz2", Details = "Wikipedia: Bzip" });
            listMimeType.Add(new MimeType() { Name = "C Shell Script", MediaType = "application/x-csh", FileExtension = ".csh", Details = "Wikipedia: C Shell" });
            listMimeType.Add(new MimeType() { Name = "C Source File", MediaType = "text/x-c", FileExtension = ".c", Details = "Wikipedia: C Programming Language" });
            listMimeType.Add(new MimeType() { Name = "CambridgeSoft Chem Draw", MediaType = "application/vnd.chemdraw+xml", FileExtension = ".cdxml", Details = "IANA: Chem Draw" });
            listMimeType.Add(new MimeType() { Name = "Cascading Style Sheets (CSS)", MediaType = "text/css", FileExtension = ".css", Details = "Wikipedia: CSS" });
            listMimeType.Add(new MimeType() { Name = "ChemDraw eXchange file", MediaType = "chemical/x-cdx", FileExtension = ".cdx", Details = "ChemDraw eXchange file" });
            listMimeType.Add(new MimeType() { Name = "Chemical Markup Language", MediaType = "chemical/x-cml", FileExtension = ".cml", Details = "Wikipedia: Chemical Markup Language" });
            listMimeType.Add(new MimeType() { Name = "Chemical Style Markup Language", MediaType = "chemical/x-csml", FileExtension = ".csml", Details = "Wikipedia: Chemical Style Markup Language" });
            listMimeType.Add(new MimeType() { Name = "CIM Database", MediaType = "application/vnd.contact.cmsg", FileExtension = ".cdbcmsg", Details = "IANA: CIM Database" });
            listMimeType.Add(new MimeType() { Name = "Claymore Data Files", MediaType = "application/vnd.claymore", FileExtension = ".cla", Details = "IANA: Claymore" });
            listMimeType.Add(new MimeType() { Name = "Clonk Game", MediaType = "application/vnd.clonk.c4group", FileExtension = ".c4g", Details = "IANA: Clonk" });
            listMimeType.Add(new MimeType() { Name = "Close Captioning - Subtitle", MediaType = "image/vnd.dvb.subtitle", FileExtension = ".sub", Details = "Wikipedia: Closed Captioning" });
            listMimeType.Add(new MimeType() { Name = "Cloud Data Management Interface (CDMI) - Capability", MediaType = "application/cdmi-capability", FileExtension = ".cdmia", Details = "RFC 6208" });
            listMimeType.Add(new MimeType() { Name = "Cloud Data Management Interface (CDMI) - Contaimer", MediaType = "application/cdmi-container", FileExtension = ".cdmic", Details = "RFC 6209" });
            listMimeType.Add(new MimeType() { Name = "Cloud Data Management Interface (CDMI) - Domain", MediaType = "application/cdmi-domain", FileExtension = ".cdmid", Details = "RFC 6210" });
            listMimeType.Add(new MimeType() { Name = "Cloud Data Management Interface (CDMI) - Object", MediaType = "application/cdmi-object", FileExtension = ".cdmio", Details = "RFC 6211" });
            listMimeType.Add(new MimeType() { Name = "Cloud Data Management Interface (CDMI) - Queue", MediaType = "application/cdmi-queue", FileExtension = ".cdmiq", Details = "RFC 6212" });
            listMimeType.Add(new MimeType() { Name = "ClueTrust CartoMobile - Config", MediaType = "application/vnd.cluetrust.cartomobile-config", FileExtension = ".c11amc", Details = "IANA: CartoMobile" });
            listMimeType.Add(new MimeType() { Name = "ClueTrust CartoMobile - Config Package", MediaType = "application/vnd.cluetrust.cartomobile-config-pkg", FileExtension = ".c11amz", Details = "IANA: CartoMobile" });
            listMimeType.Add(new MimeType() { Name = "CMU Image", MediaType = "image/x-cmu-raster", FileExtension = ".ras", Details = "" });
            listMimeType.Add(new MimeType() { Name = "COLLADA", MediaType = "model/vnd.collada+xml", FileExtension = ".dae", Details = "IANA: COLLADA" });
            listMimeType.Add(new MimeType() { Name = "Comma-Seperated Values", MediaType = "text/csv", FileExtension = ".csv", Details = "Wikipedia: CSV" });
            listMimeType.Add(new MimeType() { Name = "Compact Pro", MediaType = "application/mac-compactpro", FileExtension = ".cpt", Details = "Compact Pro" });
            listMimeType.Add(new MimeType() { Name = "Compiled Wireless Markup Language (WMLC)", MediaType = "application/vnd.wap.wmlc", FileExtension = ".wmlc", Details = "IANA: WMLC" });
            listMimeType.Add(new MimeType() { Name = "Computer Graphics Metafile", MediaType = "image/cgm", FileExtension = ".cgm", Details = "Wikipedia: Computer Graphics Metafile" });
            listMimeType.Add(new MimeType() { Name = "CoolTalk", MediaType = "x-conference/x-cooltalk", FileExtension = ".ice", Details = "Wikipedia: CoolTalk" });
            listMimeType.Add(new MimeType() { Name = "Corel Metafile Exchange (CMX)", MediaType = "image/x-cmx", FileExtension = ".cmx", Details = "Wikipedia: CorelDRAW" });
            listMimeType.Add(new MimeType() { Name = "CorelXARA", MediaType = "application/vnd.xara", FileExtension = ".xar", Details = "IANA: CorelXARA" });
            listMimeType.Add(new MimeType() { Name = "CosmoCaller", MediaType = "application/vnd.cosmocaller", FileExtension = ".cmc", Details = "IANA: CosmoCaller" });
            listMimeType.Add(new MimeType() { Name = "CPIO Archive", MediaType = "application/x-cpio", FileExtension = ".cpio", Details = "Wikipedia: cpio" });
            listMimeType.Add(new MimeType() { Name = "CrickSoftware - Clicker", MediaType = "application/vnd.crick.clicker", FileExtension = ".clkx", Details = "IANA: Clicker" });
            listMimeType.Add(new MimeType() { Name = "CrickSoftware - Clicker - Keyboard", MediaType = "application/vnd.crick.clicker.keyboard", FileExtension = ".clkk", Details = "IANA: Clicker" });
            listMimeType.Add(new MimeType() { Name = "CrickSoftware - Clicker - Palette", MediaType = "application/vnd.crick.clicker.palette", FileExtension = ".clkp", Details = "IANA: Clicker" });
            listMimeType.Add(new MimeType() { Name = "CrickSoftware - Clicker - Template", MediaType = "application/vnd.crick.clicker.template", FileExtension = ".clkt", Details = "IANA: Clicker" });
            listMimeType.Add(new MimeType() { Name = "CrickSoftware - Clicker - Wordbank", MediaType = "application/vnd.crick.clicker.wordbank", FileExtension = ".clkw", Details = "IANA: Clicker" });
            listMimeType.Add(new MimeType() { Name = "Critical Tools - PERT Chart EXPERT", MediaType = "application/vnd.criticaltools.wbs+xml", FileExtension = ".wbs", Details = "IANA: Critical Tools" });
            listMimeType.Add(new MimeType() { Name = "CryptoNote", MediaType = "application/vnd.rig.cryptonote", FileExtension = ".cryptonote", Details = "IANA: CryptoNote" });
            listMimeType.Add(new MimeType() { Name = "Crystallographic Interchange Format", MediaType = "chemical/x-cif", FileExtension = ".cif", Details = "Crystallographic Interchange Format" });
            listMimeType.Add(new MimeType() { Name = "CrystalMaker Data Format", MediaType = "chemical/x-cmdf", FileExtension = ".cmdf", Details = "CrystalMaker Data Format" });
            listMimeType.Add(new MimeType() { Name = "CU-SeeMe", MediaType = "application/cu-seeme", FileExtension = ".cu", Details = "White Pine" });
            listMimeType.Add(new MimeType() { Name = "CU-Writer", MediaType = "application/prs.cww", FileExtension = ".cww", Details = "" });
            listMimeType.Add(new MimeType() { Name = "Curl - Applet", MediaType = "text/vnd.curl", FileExtension = ".curl", Details = "Curl Applet" });
            listMimeType.Add(new MimeType() { Name = "Curl - Detached Applet", MediaType = "text/vnd.curl.dcurl", FileExtension = ".dcurl", Details = "Curl Detached Applet" });
            listMimeType.Add(new MimeType() { Name = "Curl - Manifest File", MediaType = "text/vnd.curl.mcurl", FileExtension = ".mcurl", Details = "Curl Manifest File" });
            listMimeType.Add(new MimeType() { Name = "Curl - Source Code", MediaType = "text/vnd.curl.scurl", FileExtension = ".scurl", Details = "Curl Source Code" });
            listMimeType.Add(new MimeType() { Name = "CURL Applet", MediaType = "application/vnd.curl.car", FileExtension = ".car", Details = "IANA: CURL Applet" });
            listMimeType.Add(new MimeType() { Name = "CURL Applet", MediaType = "application/vnd.curl.pcurl", FileExtension = ".pcurl", Details = "IANA: CURL Applet" });
            listMimeType.Add(new MimeType() { Name = "CustomMenu", MediaType = "application/vnd.yellowriver-custom-menu", FileExtension = ".cmp", Details = "IANA: CustomMenu" });
            listMimeType.Add(new MimeType() { Name = "Data Structure for the Security Suitability of Cryptographic Algorithms", MediaType = "application/dssc+der", FileExtension = ".dssc", Details = "RFC 5698" });
            listMimeType.Add(new MimeType() { Name = "Data Structure for the Security Suitability of Cryptographic Algorithms", MediaType = "application/dssc+xml", FileExtension = ".xdssc", Details = "RFC 5698" });
            listMimeType.Add(new MimeType() { Name = "Debian Package", MediaType = "application/x-debian-package", FileExtension = ".deb", Details = "Wikipedia: Debian Package" });
            listMimeType.Add(new MimeType() { Name = "DECE Audio", MediaType = "audio/vnd.dece.audio", FileExtension = ".uva", Details = "IANA: Dece Audio" });
            listMimeType.Add(new MimeType() { Name = "DECE Graphic", MediaType = "image/vnd.dece.graphic", FileExtension = ".uvi", Details = "IANA: DECE Graphic" });
            listMimeType.Add(new MimeType() { Name = "DECE High Definition Video", MediaType = "video/vnd.dece.hd", FileExtension = ".uvh", Details = "IANA: DECE HD Video" });
            listMimeType.Add(new MimeType() { Name = "DECE Mobile Video", MediaType = "video/vnd.dece.mobile", FileExtension = ".uvm", Details = "IANA: DECE Mobile Video" });
            listMimeType.Add(new MimeType() { Name = "DECE MP4", MediaType = "video/vnd.uvvu.mp4", FileExtension = ".uvu", Details = "IANA: DECE MP4" });
            listMimeType.Add(new MimeType() { Name = "DECE PD Video", MediaType = "video/vnd.dece.pd", FileExtension = ".uvp", Details = "IANA: DECE PD Video" });
            listMimeType.Add(new MimeType() { Name = "DECE SD Video", MediaType = "video/vnd.dece.sd", FileExtension = ".uvs", Details = "IANA: DECE SD Video" });
            listMimeType.Add(new MimeType() { Name = "DECE Video", MediaType = "video/vnd.dece.video", FileExtension = ".uvv", Details = "IANA: DECE Video" });
            listMimeType.Add(new MimeType() { Name = "Device Independent File Format (DVI)", MediaType = "application/x-dvi", FileExtension = ".dvi", Details = "Wikipedia: DVI" });
            listMimeType.Add(new MimeType() { Name = "Digital Siesmograph Networks - SEED Datafiles", MediaType = "application/vnd.fdsn.seed", FileExtension = ".seed", Details = "IANA: SEED" });
            listMimeType.Add(new MimeType() { Name = "Digital Talking Book", MediaType = "application/x-dtbook+xml", FileExtension = ".dtb", Details = "Wikipedia: EPUB" });
            listMimeType.Add(new MimeType() { Name = "Digital Talking Book - Resource File", MediaType = "application/x-dtbresource+xml", FileExtension = ".res", Details = "Digital Talking Book" });
            listMimeType.Add(new MimeType() { Name = "Digital Video Broadcasting", MediaType = "application/vnd.dvb.ait", FileExtension = ".ait", Details = "IANA: Digital Video Broadcasting" });
            listMimeType.Add(new MimeType() { Name = "Digital Video Broadcasting", MediaType = "application/vnd.dvb.service", FileExtension = ".svc", Details = "IANA: Digital Video Broadcasting" });
            listMimeType.Add(new MimeType() { Name = "Digital Winds Music", MediaType = "audio/vnd.digital-winds", FileExtension = ".eol", Details = "IANA: Digital Winds" });
            listMimeType.Add(new MimeType() { Name = "DjVu", MediaType = "image/vnd.djvu", FileExtension = ".djvu", Details = "Wikipedia: DjVu" });
            listMimeType.Add(new MimeType() { Name = "Document Type Definition", MediaType = "application/xml-dtd", FileExtension = ".dtd", Details = "W3C DTD" });
            listMimeType.Add(new MimeType() { Name = "Dolby Meridian Lossless Packing", MediaType = "application/vnd.dolby.mlp", FileExtension = ".mlp", Details = "IANA: Dolby Meridian Lossless Packing" });
            listMimeType.Add(new MimeType() { Name = "Doom Video Game", MediaType = "application/x-doom", FileExtension = ".wad", Details = "Wikipedia: Doom WAD" });
            listMimeType.Add(new MimeType() { Name = "DPGraph", MediaType = "application/vnd.dpgraph", FileExtension = ".dpg", Details = "IANA: DPGraph" });
            listMimeType.Add(new MimeType() { Name = "DRA Audio", MediaType = "audio/vnd.dra", FileExtension = ".dra", Details = "IANA: DRA" });
            listMimeType.Add(new MimeType() { Name = "DreamFactory", MediaType = "application/vnd.dreamfactory", FileExtension = ".dfac", Details = "IANA: DreamFactory" });
            listMimeType.Add(new MimeType() { Name = "DTS Audio", MediaType = "audio/vnd.dts", FileExtension = ".dts", Details = "IANA: DTS" });
            listMimeType.Add(new MimeType() { Name = "DTS High Definition Audio", MediaType = "audio/vnd.dts.hd", FileExtension = ".dtshd", Details = "IANA: DTS HD" });
            listMimeType.Add(new MimeType() { Name = "DWG Drawing", MediaType = "image/vnd.dwg", FileExtension = ".dwg", Details = "Wikipedia: DWG" });
            listMimeType.Add(new MimeType() { Name = "DynaGeo", MediaType = "application/vnd.dynageo", FileExtension = ".geo", Details = "IANA: DynaGeo" });
            listMimeType.Add(new MimeType() { Name = "ECMAScript", MediaType = "application/ecmascript", FileExtension = ".es", Details = "ECMA-357" });
            listMimeType.Add(new MimeType() { Name = "EcoWin Chart", MediaType = "application/vnd.ecowin.chart", FileExtension = ".mag", Details = "IANA: EcoWin Chart" });
            listMimeType.Add(new MimeType() { Name = "EDMICS 2000", MediaType = "image/vnd.fujixerox.edmics-mmr", FileExtension = ".mmr", Details = "IANA: EDMICS 2000" });
            listMimeType.Add(new MimeType() { Name = "EDMICS 2000", MediaType = "image/vnd.fujixerox.edmics-rlc", FileExtension = ".rlc", Details = "IANA: EDMICS 2000" });
            listMimeType.Add(new MimeType() { Name = "Efficient XML Interchange", MediaType = "application/exi", FileExtension = ".exi", Details = "Efficient XML Interchange (EXI) Best Practices" });
            listMimeType.Add(new MimeType() { Name = "EFI Proteus", MediaType = "application/vnd.proteus.magazine", FileExtension = ".mgz", Details = "IANA: EFI Proteus" });
            listMimeType.Add(new MimeType() { Name = "Electronic Publication", MediaType = "application/epub+zip", FileExtension = ".epub", Details = "Wikipedia: EPUB" });
            listMimeType.Add(new MimeType() { Name = "Email Message", MediaType = "message/rfc822", FileExtension = ".eml", Details = "RFC 2822" });
            listMimeType.Add(new MimeType() { Name = "Enliven Viewer", MediaType = "application/vnd.enliven", FileExtension = ".nml", Details = "IANA: Enliven Viewer" });
            listMimeType.Add(new MimeType() { Name = "Express by Infoseek", MediaType = "application/vnd.is-xpr", FileExtension = ".xpr", Details = "IANA: Express by Infoseek" });
            listMimeType.Add(new MimeType() { Name = "eXtended Image File Format (XIFF)", MediaType = "image/vnd.xiff", FileExtension = ".xif", Details = "IANA: XIFF" });
            listMimeType.Add(new MimeType() { Name = "Extensible Forms Description Language", MediaType = "application/vnd.xfdl", FileExtension = ".xfdl", Details = "IANA: Extensible Forms Description Language" });
            listMimeType.Add(new MimeType() { Name = "Extensible MultiModal Annotation", MediaType = "application/emma+xml", FileExtension = ".emma", Details = "EMMA: Extensible MultiModal Annotation markup language" });
            listMimeType.Add(new MimeType() { Name = "EZPix Secure Photo Album", MediaType = "application/vnd.ezpix-album", FileExtension = ".ez2", Details = "IANA: EZPix Secure Photo Album" });
            listMimeType.Add(new MimeType() { Name = "EZPix Secure Photo Album", MediaType = "application/vnd.ezpix-package", FileExtension = ".ez3", Details = "IANA: EZPix Secure Photo Album" });
            listMimeType.Add(new MimeType() { Name = "FAST Search & Transfer ASA", MediaType = "image/vnd.fst", FileExtension = ".fst", Details = "IANA: FAST Search & Transfer ASA" });
            listMimeType.Add(new MimeType() { Name = "FAST Search & Transfer ASA", MediaType = "video/vnd.fvt", FileExtension = ".fvt", Details = "IANA: FVT" });
            listMimeType.Add(new MimeType() { Name = "FastBid Sheet", MediaType = "image/vnd.fastbidsheet", FileExtension = ".fbs", Details = "IANA: FastBid Sheet" });
            listMimeType.Add(new MimeType() { Name = "FCS Express Layout Link", MediaType = "application/vnd.denovo.fcselayout-link", FileExtension = ".fe_launch", Details = "IANA: FCS Express Layout Link" });
            listMimeType.Add(new MimeType() { Name = "Flash Video", MediaType = "video/x-f4v", FileExtension = ".f4v", Details = "Wikipedia: Flash Video" });
            listMimeType.Add(new MimeType() { Name = "Flash Video", MediaType = "video/x-flv", FileExtension = ".flv", Details = "Wikipedia: Flash Video" });
            listMimeType.Add(new MimeType() { Name = "FlashPix", MediaType = "image/vnd.fpx", FileExtension = ".fpx", Details = "IANA: FPX" });
            listMimeType.Add(new MimeType() { Name = "FlashPix", MediaType = "image/vnd.net-fpx", FileExtension = ".npx", Details = "IANA: FPX" });
            listMimeType.Add(new MimeType() { Name = "FLEXSTOR", MediaType = "text/vnd.fmi.flexstor", FileExtension = ".flx", Details = "IANA: FLEXSTOR" });
            listMimeType.Add(new MimeType() { Name = "FLI/FLC Animation Format", MediaType = "video/x-fli", FileExtension = ".fli", Details = "FLI/FLC Animation Format" });
            listMimeType.Add(new MimeType() { Name = "FluxTime Clip", MediaType = "application/vnd.fluxtime.clip", FileExtension = ".ftc", Details = "IANA: FluxTime Clip" });
            listMimeType.Add(new MimeType() { Name = "Forms Data Format", MediaType = "application/vnd.fdf", FileExtension = ".fdf", Details = "IANA: Forms Data Format" });
            listMimeType.Add(new MimeType() { Name = "Fortran Source File", MediaType = "text/x-fortran", FileExtension = ".f", Details = "Wikipedia: Fortran" });
            listMimeType.Add(new MimeType() { Name = "FrameMaker Interchange Format", MediaType = "application/vnd.mif", FileExtension = ".mif", Details = "IANA: FrameMaker Interchange Format" });
            listMimeType.Add(new MimeType() { Name = "FrameMaker Normal Format", MediaType = "application/vnd.framemaker", FileExtension = ".fm", Details = "IANA: FrameMaker" });
            listMimeType.Add(new MimeType() { Name = "FreeHand MX", MediaType = "image/x-freehand", FileExtension = ".fh", Details = "Wikipedia: Macromedia Freehand" });
            listMimeType.Add(new MimeType() { Name = "Friendly Software Corporation", MediaType = "application/vnd.fsc.weblaunch", FileExtension = ".fsc", Details = "IANA: Friendly Software Corporation" });
            listMimeType.Add(new MimeType() { Name = "Frogans Player", MediaType = "application/vnd.frogans.fnc", FileExtension = ".fnc", Details = "IANA: Frogans Player" });
            listMimeType.Add(new MimeType() { Name = "Frogans Player", MediaType = "application/vnd.frogans.ltf", FileExtension = ".ltf", Details = "IANA: Frogans Player" });
            listMimeType.Add(new MimeType() { Name = "Fujitsu - Xerox 2D CAD Data", MediaType = "application/vnd.fujixerox.ddd", FileExtension = ".ddd", Details = "IANA: Fujitsu DDD" });
            listMimeType.Add(new MimeType() { Name = "Fujitsu - Xerox DocuWorks", MediaType = "application/vnd.fujixerox.docuworks", FileExtension = ".xdw", Details = "IANA: Docuworks" });
            listMimeType.Add(new MimeType() { Name = "Fujitsu - Xerox DocuWorks Binder", MediaType = "application/vnd.fujixerox.docuworks.binder", FileExtension = ".xbd", Details = "IANA: Docuworks Binder" });
            listMimeType.Add(new MimeType() { Name = "Fujitsu Oasys", MediaType = "application/vnd.fujitsu.oasys", FileExtension = ".oas", Details = "IANA: Fujitsu Oasys" });
            listMimeType.Add(new MimeType() { Name = "Fujitsu Oasys", MediaType = "application/vnd.fujitsu.oasys2", FileExtension = ".oa2", Details = "IANA: Fujitsu Oasys" });
            listMimeType.Add(new MimeType() { Name = "Fujitsu Oasys", MediaType = "application/vnd.fujitsu.oasys3", FileExtension = ".oa3", Details = "IANA: Fujitsu Oasys" });
            listMimeType.Add(new MimeType() { Name = "Fujitsu Oasys", MediaType = "application/vnd.fujitsu.oasysgp", FileExtension = ".fg5", Details = "IANA: Fujitsu Oasys" });
            listMimeType.Add(new MimeType() { Name = "Fujitsu Oasys", MediaType = "application/vnd.fujitsu.oasysprs", FileExtension = ".bh2", Details = "IANA: Fujitsu Oasys" });
            listMimeType.Add(new MimeType() { Name = "FutureSplash Animator", MediaType = "application/x-futuresplash", FileExtension = ".spl", Details = "Wikipedia: FutureSplash Animator" });
            listMimeType.Add(new MimeType() { Name = "FuzzySheet", MediaType = "application/vnd.fuzzysheet", FileExtension = ".fzs", Details = "IANA: FuzySheet" });
            listMimeType.Add(new MimeType() { Name = "G3 Fax Image", MediaType = "image/g3fax", FileExtension = ".g3", Details = "Wikipedia: G3 Fax Image" });
            listMimeType.Add(new MimeType() { Name = "GameMaker ActiveX", MediaType = "application/vnd.gmx", FileExtension = ".gmx", Details = "IANA: GameMaker ActiveX" });
            listMimeType.Add(new MimeType() { Name = "Gen-Trix Studio", MediaType = "model/vnd.gtw", FileExtension = ".gtw", Details = "IANA: GTW" });
            listMimeType.Add(new MimeType() { Name = "Genomatix Tuxedo Framework", MediaType = "application/vnd.genomatix.tuxedo", FileExtension = ".txd", Details = "IANA: Genomatix Tuxedo Framework" });
            listMimeType.Add(new MimeType() { Name = "GeoGebra", MediaType = "application/vnd.geogebra.file", FileExtension = ".ggb", Details = "IANA: GeoGebra" });
            listMimeType.Add(new MimeType() { Name = "GeoGebra", MediaType = "application/vnd.geogebra.tool", FileExtension = ".ggt", Details = "IANA: GeoGebra" });
            listMimeType.Add(new MimeType() { Name = "Geometric Description Language (GDL)", MediaType = "model/vnd.gdl", FileExtension = ".gdl", Details = "IANA: GDL" });
            listMimeType.Add(new MimeType() { Name = "GeoMetry Explorer", MediaType = "application/vnd.geometry-explorer", FileExtension = ".gex", Details = "IANA: GeoMetry Explorer" });
            listMimeType.Add(new MimeType() { Name = "GEONExT and JSXGraph", MediaType = "application/vnd.geonext", FileExtension = ".gxt", Details = "IANA: GEONExT and JSXGraph" });
            listMimeType.Add(new MimeType() { Name = "GeoplanW", MediaType = "application/vnd.geoplan", FileExtension = ".g2w", Details = "IANA: GeoplanW" });
            listMimeType.Add(new MimeType() { Name = "GeospacW", MediaType = "application/vnd.geospace", FileExtension = ".g3w", Details = "IANA: GeospacW" });
            listMimeType.Add(new MimeType() { Name = "Ghostscript Font", MediaType = "application/x-font-ghostscript", FileExtension = ".gsf", Details = "Wikipedia: Ghostscript" });
            listMimeType.Add(new MimeType() { Name = "Glyph Bitmap Distribution Format", MediaType = "application/x-font-bdf", FileExtension = ".bdf", Details = "Wikipedia: Glyph Bitmap Distribution Format" });
            listMimeType.Add(new MimeType() { Name = "GNU Tar Files", MediaType = "application/x-gtar", FileExtension = ".gtar", Details = "GNU Tar" });
            listMimeType.Add(new MimeType() { Name = "GNU Texinfo Document", MediaType = "application/x-texinfo", FileExtension = ".texinfo", Details = "Wikipedia: Texinfo" });
            listMimeType.Add(new MimeType() { Name = "Gnumeric", MediaType = "application/x-gnumeric", FileExtension = ".gnumeric", Details = "Wikipedia: Gnumeric" });
            listMimeType.Add(new MimeType() { Name = "Google Earth - KML", MediaType = "application/vnd.google-earth.kml+xml", FileExtension = ".kml", Details = "IANA: Google Earth" });
            listMimeType.Add(new MimeType() { Name = "Google Earth - Zipped KML", MediaType = "application/vnd.google-earth.kmz", FileExtension = ".kmz", Details = "IANA: Google Earth" });
            listMimeType.Add(new MimeType() { Name = "GrafEq", MediaType = "application/vnd.grafeq", FileExtension = ".gqf", Details = "IANA: GrafEq" });
            listMimeType.Add(new MimeType() { Name = "Graphics Interchange Format", MediaType = "image/gif", FileExtension = ".gif", Details = "Wikipedia: Graphics Interchange Format" });
            listMimeType.Add(new MimeType() { Name = "Graphviz", MediaType = "text/vnd.graphviz", FileExtension = ".gv", Details = "IANA: Graphviz" });
            listMimeType.Add(new MimeType() { Name = "Groove - Account", MediaType = "application/vnd.groove-account", FileExtension = ".gac", Details = "IANA: Groove" });
            listMimeType.Add(new MimeType() { Name = "Groove - Help", MediaType = "application/vnd.groove-help", FileExtension = ".ghf", Details = "IANA: Groove" });
            listMimeType.Add(new MimeType() { Name = "Groove - Identity Message", MediaType = "application/vnd.groove-identity-message", FileExtension = ".gim", Details = "IANA: Groove" });
            listMimeType.Add(new MimeType() { Name = "Groove - Injector", MediaType = "application/vnd.groove-injector", FileExtension = ".grv", Details = "IANA: Groove" });
            listMimeType.Add(new MimeType() { Name = "Groove - Tool Message", MediaType = "application/vnd.groove-tool-message", FileExtension = ".gtm", Details = "IANA: Groove" });
            listMimeType.Add(new MimeType() { Name = "Groove - Tool Template", MediaType = "application/vnd.groove-tool-template", FileExtension = ".tpl", Details = "IANA: Groove" });
            listMimeType.Add(new MimeType() { Name = "Groove - Vcard", MediaType = "application/vnd.groove-vcard", FileExtension = ".vcg", Details = "IANA: Groove" });
            listMimeType.Add(new MimeType() { Name = "H.261", MediaType = "video/h261", FileExtension = ".h261", Details = "Wikipedia: H.261" });
            listMimeType.Add(new MimeType() { Name = "H.263", MediaType = "video/h263", FileExtension = ".h263", Details = "Wikipedia: H.263" });
            listMimeType.Add(new MimeType() { Name = "H.264", MediaType = "video/h264", FileExtension = ".h264", Details = "Wikipedia: H.264" });
            listMimeType.Add(new MimeType() { Name = "Hewlett Packard Instant Delivery", MediaType = "application/vnd.hp-hpid", FileExtension = ".hpid", Details = "IANA: Hewlett Packard Instant Delivery" });
            listMimeType.Add(new MimeType() { Name = "Hewlett-Packard's WebPrintSmart", MediaType = "application/vnd.hp-hps", FileExtension = ".hps", Details = "IANA: Hewlett-Packard's WebPrintSmart" });
            listMimeType.Add(new MimeType() { Name = "Hierarchical Data Format", MediaType = "application/x-hdf", FileExtension = ".hdf", Details = "Wikipedia: Hierarchical Data Format" });
            listMimeType.Add(new MimeType() { Name = "Hit'n'Mix", MediaType = "audio/vnd.rip", FileExtension = ".rip", Details = "IANA: Hit'n'Mix" });
            listMimeType.Add(new MimeType() { Name = "Homebanking Computer Interface (HBCI)", MediaType = "application/vnd.hbci", FileExtension = ".hbci", Details = "IANA: HBCI" });
            listMimeType.Add(new MimeType() { Name = "HP Indigo Digital Press - Job Layout Languate", MediaType = "application/vnd.hp-jlyt", FileExtension = ".jlt", Details = "IANA: HP Job Layout Language" });
            listMimeType.Add(new MimeType() { Name = "HP Printer Command Language", MediaType = "application/vnd.hp-pcl", FileExtension = ".pcl", Details = "IANA: HP Printer Command Language" });
            listMimeType.Add(new MimeType() { Name = "HP-GL/2 and HP RTL", MediaType = "application/vnd.hp-hpgl", FileExtension = ".hpgl", Details = "IANA: HP-GL/2 and HP RTL" });
            listMimeType.Add(new MimeType() { Name = "HV Script", MediaType = "application/vnd.yamaha.hv-script", FileExtension = ".hvs", Details = "IANA: HV Script" });
            listMimeType.Add(new MimeType() { Name = "HV Voice Dictionary", MediaType = "application/vnd.yamaha.hv-dic", FileExtension = ".hvd", Details = "IANA: HV Voice Dictionary" });
            listMimeType.Add(new MimeType() { Name = "HV Voice Parameter", MediaType = "application/vnd.yamaha.hv-voice", FileExtension = ".hvp", Details = "IANA: HV Voice Parameter" });
            listMimeType.Add(new MimeType() { Name = "Hydrostatix Master Suite", MediaType = "application/vnd.hydrostatix.sof-data", FileExtension = ".sfd-hdstx", Details = "IANA: Hydrostatix Master Suite" });
            listMimeType.Add(new MimeType() { Name = "Hyperstudio", MediaType = "application/hyperstudio", FileExtension = ".stk", Details = "IANA - Hyperstudio" });
            listMimeType.Add(new MimeType() { Name = "Hypertext Application Language", MediaType = "application/vnd.hal+xml", FileExtension = ".hal", Details = "IANA: HAL" });
            listMimeType.Add(new MimeType() { Name = "HyperText Markup Language (HTML)", MediaType = "text/html", FileExtension = ".html", Details = "Wikipedia: HTML" });
            listMimeType.Add(new MimeType() { Name = "IBM DB2 Rights Manager", MediaType = "application/vnd.ibm.rights-management", FileExtension = ".irm", Details = "IANA: IBM DB2 Rights Manager" });
            listMimeType.Add(new MimeType() { Name = "IBM Electronic Media Management System - Secure Container", MediaType = "application/vnd.ibm.secure-container", FileExtension = ".sc", Details = "IANA: EMMS" });
            listMimeType.Add(new MimeType() { Name = "iCalendar", MediaType = "text/calendar", FileExtension = ".ics", Details = "Wikipedia: iCalendar" });
            listMimeType.Add(new MimeType() { Name = "ICC profile", MediaType = "application/vnd.iccprofile", FileExtension = ".icc", Details = "IANA: ICC profile" });
            listMimeType.Add(new MimeType() { Name = "Icon Image", MediaType = "image/x-icon", FileExtension = ".ico", Details = "Wikipedia: ICO File Format" });
            listMimeType.Add(new MimeType() { Name = "igLoader", MediaType = "application/vnd.igloader", FileExtension = ".igl", Details = "IANA: igLoader" });
            listMimeType.Add(new MimeType() { Name = "Image Exchange Format", MediaType = "image/ief", FileExtension = ".ief", Details = "RFC 1314" });
            listMimeType.Add(new MimeType() { Name = "ImmerVision PURE Players", MediaType = "application/vnd.immervision-ivp", FileExtension = ".ivp", Details = "IANA: ImmerVision PURE Players" });
            listMimeType.Add(new MimeType() { Name = "ImmerVision PURE Players", MediaType = "application/vnd.immervision-ivu", FileExtension = ".ivu", Details = "IANA: ImmerVision PURE Players" });
            listMimeType.Add(new MimeType() { Name = "IMS Networks", MediaType = "application/reginfo+xml", FileExtension = ".rif", Details = "" });
            listMimeType.Add(new MimeType() { Name = "In3D - 3DML", MediaType = "text/vnd.in3d.3dml", FileExtension = ".3dml", Details = "IANA: In3D" });
            listMimeType.Add(new MimeType() { Name = "In3D - 3DML", MediaType = "text/vnd.in3d.spot", FileExtension = ".spot", Details = "IANA: In3D" });
            listMimeType.Add(new MimeType() { Name = "Initial Graphics Exchange Specification (IGES)", MediaType = "model/iges", FileExtension = ".igs", Details = "Wikipedia: IGES" });
            listMimeType.Add(new MimeType() { Name = "Interactive Geometry Software", MediaType = "application/vnd.intergeo", FileExtension = ".i2g", Details = "IANA: Interactive Geometry Software" });
            listMimeType.Add(new MimeType() { Name = "Interactive Geometry Software Cinderella", MediaType = "application/vnd.cinderella", FileExtension = ".cdy", Details = "IANA: Cinderella" });
            listMimeType.Add(new MimeType() { Name = "Intercon FormNet", MediaType = "application/vnd.intercon.formnet", FileExtension = ".xpw", Details = "IANA: Intercon FormNet" });
            listMimeType.Add(new MimeType() { Name = "International Society for Advancement of Cytometry", MediaType = "application/vnd.isac.fcs", FileExtension = ".fcs", Details = "IANA: International Society for Advancement of Cytometry" });
            listMimeType.Add(new MimeType() { Name = "Internet Protocol Flow Information Export", MediaType = "application/ipfix", FileExtension = ".ipfix", Details = "RFC 3917" });
            listMimeType.Add(new MimeType() { Name = "Internet Public Key Infrastructure - Certificate", MediaType = "application/pkix-cert", FileExtension = ".cer", Details = "RFC 2585" });
            listMimeType.Add(new MimeType() { Name = "Internet Public Key Infrastructure - Certificate Management Protocole", MediaType = "application/pkixcmp", FileExtension = ".pki", Details = "RFC 2585" });
            listMimeType.Add(new MimeType() { Name = "Internet Public Key Infrastructure - Certificate Revocation Lists", MediaType = "application/pkix-crl", FileExtension = ".crl", Details = "RFC 2585" });
            listMimeType.Add(new MimeType() { Name = "Internet Public Key Infrastructure - Certification Path", MediaType = "application/pkix-pkipath", FileExtension = ".pkipath", Details = "RFC 2585" });
            listMimeType.Add(new MimeType() { Name = "IOCOM Visimeet", MediaType = "application/vnd.insors.igm", FileExtension = ".igm", Details = "IANA: IOCOM Visimeet" });
            listMimeType.Add(new MimeType() { Name = "IP Unplugged Roaming Client", MediaType = "application/vnd.ipunplugged.rcprofile", FileExtension = ".rcprofile", Details = "IANA: IP Unplugged Roaming Client" });
            listMimeType.Add(new MimeType() { Name = "iRepository / Lucidoc Editor", MediaType = "application/vnd.irepository.package+xml", FileExtension = ".irp", Details = "IANA: iRepository / Lucidoc Editor" });
            listMimeType.Add(new MimeType() { Name = "J2ME App Descriptor", MediaType = "text/vnd.sun.j2me.app-descriptor", FileExtension = ".jad", Details = "IANA: J2ME App Descriptor" });
            listMimeType.Add(new MimeType() { Name = "Java Archive", MediaType = "application/java-archive", FileExtension = ".jar", Details = "Wikipedia: JAR file format" });
            listMimeType.Add(new MimeType() { Name = "Java Bytecode File", MediaType = "application/java-vm", FileExtension = ".class", Details = "Wikipedia: Java Bytecode" });
            listMimeType.Add(new MimeType() { Name = "Java Network Launching Protocol", MediaType = "application/x-java-jnlp-file", FileExtension = ".jnlp", Details = "Wikipedia: Java Web Start" });
            listMimeType.Add(new MimeType() { Name = "Java Serialized Object", MediaType = "application/java-serialized-object", FileExtension = ".ser", Details = "Java Serialization API" });
            listMimeType.Add(new MimeType() { Name = "Java Source File", MediaType = "text/x-java-source,java", FileExtension = ".java", Details = "Wikipedia: Java" });
            listMimeType.Add(new MimeType() { Name = "JavaScript", MediaType = "application/javascript", FileExtension = ".js", Details = "JavaScript" });
            listMimeType.Add(new MimeType() { Name = "JavaScript Object Notation (JSON)", MediaType = "application/json", FileExtension = ".json", Details = "Wikipedia: JSON" });
            listMimeType.Add(new MimeType() { Name = "Joda Archive", MediaType = "application/vnd.joost.joda-archive", FileExtension = ".joda", Details = "IANA: Joda Archive" });
            listMimeType.Add(new MimeType() { Name = "JPEG 2000 Compound Image File Format", MediaType = "video/jpm", FileExtension = ".jpm", Details = "IANA: JPM" });
            listMimeType.Add(new MimeType() { Name = "JPEG Image", MediaType = "image/jpeg", FileExtension = ".jpeg, .jpg", Details = "RFC 1314" });
            listMimeType.Add(new MimeType() { Name = "JPEG Image (Progressive)", MediaType = "image/pjpeg", FileExtension = ".pjpeg", Details = "JPEG image compression FAQ" });
            listMimeType.Add(new MimeType() { Name = "JPGVideo", MediaType = "video/jpeg", FileExtension = ".jpgv", Details = "RFC 3555" });
            listMimeType.Add(new MimeType() { Name = "Kahootz", MediaType = "application/vnd.kahootz", FileExtension = ".ktz", Details = "IANA: Kahootz" });
            listMimeType.Add(new MimeType() { Name = "Karaoke on Chipnuts Chipsets", MediaType = "application/vnd.chipnuts.karaoke-mmd", FileExtension = ".mmd", Details = "IANA: Chipnuts Karaoke" });
            listMimeType.Add(new MimeType() { Name = "KDE KOffice Office Suite - Karbon", MediaType = "application/vnd.kde.karbon", FileExtension = ".karbon", Details = "IANA: KDE KOffice Office Suite" });
            listMimeType.Add(new MimeType() { Name = "KDE KOffice Office Suite - KChart", MediaType = "application/vnd.kde.kchart", FileExtension = ".chrt", Details = "IANA: KDE KOffice Office Suite" });
            listMimeType.Add(new MimeType() { Name = "KDE KOffice Office Suite - Kformula", MediaType = "application/vnd.kde.kformula", FileExtension = ".kfo", Details = "IANA: KDE KOffice Office Suite" });
            listMimeType.Add(new MimeType() { Name = "KDE KOffice Office Suite - Kivio", MediaType = "application/vnd.kde.kivio", FileExtension = ".flw", Details = "IANA: KDE KOffice Office Suite" });
            listMimeType.Add(new MimeType() { Name = "KDE KOffice Office Suite - Kontour", MediaType = "application/vnd.kde.kontour", FileExtension = ".kon", Details = "IANA: KDE KOffice Office Suite" });
            listMimeType.Add(new MimeType() { Name = "KDE KOffice Office Suite - Kpresenter", MediaType = "application/vnd.kde.kpresenter", FileExtension = ".kpr", Details = "IANA: KDE KOffice Office Suite" });
            listMimeType.Add(new MimeType() { Name = "KDE KOffice Office Suite - Kspread", MediaType = "application/vnd.kde.kspread", FileExtension = ".ksp", Details = "IANA: KDE KOffice Office Suite" });
            listMimeType.Add(new MimeType() { Name = "KDE KOffice Office Suite - Kword", MediaType = "application/vnd.kde.kword", FileExtension = ".kwd", Details = "IANA: KDE KOffice Office Suite" });
            listMimeType.Add(new MimeType() { Name = "Kenamea App", MediaType = "application/vnd.kenameaapp", FileExtension = ".htke", Details = "IANA: Kenamea App" });
            listMimeType.Add(new MimeType() { Name = "Kidspiration", MediaType = "application/vnd.kidspiration", FileExtension = ".kia", Details = "IANA: Kidspiration" });
            listMimeType.Add(new MimeType() { Name = "Kinar Applications", MediaType = "application/vnd.kinar", FileExtension = ".kne", Details = "IANA: Kina Applications" });
            listMimeType.Add(new MimeType() { Name = "Kodak Storyshare", MediaType = "application/vnd.kodak-descriptor", FileExtension = ".sse", Details = "IANA: Kodak Storyshare" });
            listMimeType.Add(new MimeType() { Name = "Laser App Enterprise", MediaType = "application/vnd.las.las+xml", FileExtension = ".lasxml", Details = "IANA: Laser App Enterprise" });
            listMimeType.Add(new MimeType() { Name = "LaTeX", MediaType = "application/x-latex", FileExtension = ".latex", Details = "Wikipedia: LaTeX" });
            listMimeType.Add(new MimeType() { Name = "Life Balance - Desktop Edition", MediaType = "application/vnd.llamagraphics.life-balance.desktop", FileExtension = ".lbd", Details = "IANA: Life Balance" });
            listMimeType.Add(new MimeType() { Name = "Life Balance - Exchange Format", MediaType = "application/vnd.llamagraphics.life-balance.exchange+xml", FileExtension = ".lbe", Details = "IANA: Life Balance" });
            listMimeType.Add(new MimeType() { Name = "Lightspeed Audio Lab", MediaType = "application/vnd.jam", FileExtension = ".jam", Details = "IANA: Lightspeed Audio Lab" });
            listMimeType.Add(new MimeType() { Name = "Lotus 1-2-3", MediaType = "application/vnd.lotus-1-2-3", FileExtension = "0.123", Details = "IANA: Lotus 1-2-3" });
            listMimeType.Add(new MimeType() { Name = "Lotus Approach", MediaType = "application/vnd.lotus-approach", FileExtension = ".apr", Details = "IANA: Lotus Approach" });
            listMimeType.Add(new MimeType() { Name = "Lotus Freelance", MediaType = "application/vnd.lotus-freelance", FileExtension = ".pre", Details = "IANA: Lotus Freelance" });
            listMimeType.Add(new MimeType() { Name = "Lotus Notes", MediaType = "application/vnd.lotus-notes", FileExtension = ".nsf", Details = "IANA: Lotus Notes" });
            listMimeType.Add(new MimeType() { Name = "Lotus Organizer", MediaType = "application/vnd.lotus-organizer", FileExtension = ".org", Details = "IANA: Lotus Organizer" });
            listMimeType.Add(new MimeType() { Name = "Lotus Screencam", MediaType = "application/vnd.lotus-screencam", FileExtension = ".scm", Details = "IANA: Lotus Screencam" });
            listMimeType.Add(new MimeType() { Name = "Lotus Wordpro", MediaType = "application/vnd.lotus-wordpro", FileExtension = ".lwp", Details = "IANA: Lotus Wordpro" });
            listMimeType.Add(new MimeType() { Name = "Lucent Voice", MediaType = "audio/vnd.lucent.voice", FileExtension = ".lvp", Details = "IANA: Lucent Voice" });
            listMimeType.Add(new MimeType() { Name = "M3U (Multimedia Playlist)", MediaType = "audio/x-mpegurl", FileExtension = ".m3u", Details = "Wikipedia: M3U" });
            listMimeType.Add(new MimeType() { Name = "M4v", MediaType = "video/x-m4v", FileExtension = ".m4v", Details = "Wikipedia: M4v" });
            listMimeType.Add(new MimeType() { Name = "Macintosh BinHex 4.0", MediaType = "application/mac-binhex40", FileExtension = ".hqx", Details = "MacMIME" });
            listMimeType.Add(new MimeType() { Name = "MacPorts Port System", MediaType = "application/vnd.macports.portpkg", FileExtension = ".portpkg", Details = "IANA: MacPorts Port System" });
            listMimeType.Add(new MimeType() { Name = "MapGuide DBXML", MediaType = "application/vnd.osgeo.mapguide.package", FileExtension = ".mgp", Details = "IANA: MapGuide DBXML" });
            listMimeType.Add(new MimeType() { Name = "MARC Formats", MediaType = "application/marc", FileExtension = ".mrc", Details = "RFC 2220" });
            listMimeType.Add(new MimeType() { Name = "MARC21 XML Schema", MediaType = "application/marcxml+xml", FileExtension = ".mrcx", Details = "RFC 6207" });
            listMimeType.Add(new MimeType() { Name = "Material Exchange Format", MediaType = "application/mxf", FileExtension = ".mxf", Details = "RFC 4539" });
            listMimeType.Add(new MimeType() { Name = "Mathematica Notebook Player", MediaType = "application/vnd.wolfram.player", FileExtension = ".nbp", Details = "IANA: Mathematica Notebook Player" });
            listMimeType.Add(new MimeType() { Name = "Mathematica Notebooks", MediaType = "application/mathematica", FileExtension = ".ma", Details = "IANA - Mathematica" });
            listMimeType.Add(new MimeType() { Name = "Mathematical Markup Language", MediaType = "application/mathml+xml", FileExtension = ".mathml", Details = "W3C Math Home" });
            listMimeType.Add(new MimeType() { Name = "Mbox database files", MediaType = "application/mbox", FileExtension = ".mbox", Details = "RFC 4155" });
            listMimeType.Add(new MimeType() { Name = "MedCalc", MediaType = "application/vnd.medcalcdata", FileExtension = ".mc1", Details = "IANA: MedCalc" });
            listMimeType.Add(new MimeType() { Name = "Media Server Control Markup Language", MediaType = "application/mediaservercontrol+xml", FileExtension = ".mscml", Details = "RFC 5022" });
            listMimeType.Add(new MimeType() { Name = "MediaRemote", MediaType = "application/vnd.mediastation.cdkey", FileExtension = ".cdkey", Details = "IANA: MediaRemote" });
            listMimeType.Add(new MimeType() { Name = "Medical Waveform Encoding Format", MediaType = "application/vnd.mfer", FileExtension = ".mwf", Details = "IANA: Medical Waveform Encoding Format" });
            listMimeType.Add(new MimeType() { Name = "Melody Format for Mobile Platform", MediaType = "application/vnd.mfmp", FileExtension = ".mfm", Details = "IANA: Melody Format for Mobile Platform" });
            listMimeType.Add(new MimeType() { Name = "Mesh Data Type", MediaType = "model/mesh", FileExtension = ".msh", Details = "RFC 2077" });
            listMimeType.Add(new MimeType() { Name = "Metadata Authority Description Schema", MediaType = "application/mads+xml", FileExtension = ".mads", Details = "RFC 6207" });
            listMimeType.Add(new MimeType() { Name = "Metadata Encoding and Transmission Standard", MediaType = "application/mets+xml", FileExtension = ".mets", Details = "RFC 6207" });
            listMimeType.Add(new MimeType() { Name = "Metadata Object Description Schema", MediaType = "application/mods+xml", FileExtension = ".mods", Details = "RFC 6207" });
            listMimeType.Add(new MimeType() { Name = "Metalink", MediaType = "application/metalink4+xml", FileExtension = ".meta4", Details = "Wikipedia: Metalink" });
            listMimeType.Add(new MimeType() { Name = "Micro CADAM Helix D&D", MediaType = "application/vnd.mcd", FileExtension = ".mcd", Details = "IANA: Micro CADAM Helix D&D" });
            listMimeType.Add(new MimeType() { Name = "Micrografx", MediaType = "application/vnd.micrografx.flo", FileExtension = ".flo", Details = "IANA: Micrografx" });
            listMimeType.Add(new MimeType() { Name = "Micrografx iGrafx Professional", MediaType = "application/vnd.micrografx.igx", FileExtension = ".igx", Details = "IANA: Micrografx" });
            listMimeType.Add(new MimeType() { Name = "MICROSEC e-Szign¢", MediaType = "application/vnd.eszigno3+xml", FileExtension = ".es3", Details = "IANA: MICROSEC e-Szign¢" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Access", MediaType = "application/x-msaccess", FileExtension = ".mdb", Details = "Wikipedia: Microsoft Access" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Advanced Systems Format (ASF)", MediaType = "video/x-ms-asf", FileExtension = ".asf", Details = "Wikipedia: Advanced Systems Format (ASF)" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Application", MediaType = "application/x-msdownload", FileExtension = ".exe", Details = "Wikipedia: EXE" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Artgalry", MediaType = "application/vnd.ms-artgalry", FileExtension = ".cil", Details = "IANA: MS Artgalry" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Cabinet File", MediaType = "application/vnd.ms-cab-compressed", FileExtension = ".cab", Details = "IANA: MS Cabinet File" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Class Server", MediaType = "application/vnd.ms-ims", FileExtension = ".ims", Details = "IANA: MS Class Server" });
            listMimeType.Add(new MimeType() { Name = "Microsoft ClickOnce", MediaType = "application/x-ms-application", FileExtension = ".application", Details = "Wikipedia: ClickOnce" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Clipboard Clip", MediaType = "application/x-msclip", FileExtension = ".clp", Details = "Wikipedia: Clipboard" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Document Imaging Format", MediaType = "image/vnd.ms-modi", FileExtension = ".mdi", Details = "Wikipedia: Microsoft Document Image Format" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Embedded OpenType", MediaType = "application/vnd.ms-fontobject", FileExtension = ".eot", Details = "IANA: MS Embedded OpenType" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Excel", MediaType = "application/vnd.ms-excel", FileExtension = ".xls", Details = "IANA: MS Excel" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Excel - Add-In File", MediaType = "application/vnd.ms-excel.addin.macroenabled.12", FileExtension = ".xlam", Details = "IANA: MS Excel" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Excel - Binary Workbook", MediaType = "application/vnd.ms-excel.sheet.binary.macroenabled.12", FileExtension = ".xlsb", Details = "IANA: MS Excel" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Excel - Macro-Enabled Template File", MediaType = "application/vnd.ms-excel.template.macroenabled.12", FileExtension = ".xltm", Details = "IANA: MS Excel" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Excel - Macro-Enabled Workbook", MediaType = "application/vnd.ms-excel.sheet.macroenabled.12", FileExtension = ".xlsm", Details = "IANA: MS Excel" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Html Help File", MediaType = "application/vnd.ms-htmlhelp", FileExtension = ".chm", Details = "IANA:MS Html Help File" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Information Card", MediaType = "application/x-mscardfile", FileExtension = ".crd", Details = "Wikipedia: Information Card" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Learning Resource Module", MediaType = "application/vnd.ms-lrm", FileExtension = ".lrm", Details = "IANA: MS Learning Resource Module" });
            listMimeType.Add(new MimeType() { Name = "Microsoft MediaView", MediaType = "application/x-msmediaview", FileExtension = ".mvb", Details = "Windows Help" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Money", MediaType = "application/x-msmoney", FileExtension = ".mny", Details = "Wikipedia: Microsoft Money" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Office - OOXML - Presentation", MediaType = "application/vnd.openxmlformats-officedocument.presentationml.presentation", FileExtension = ".pptx", Details = "IANA: OOXML - Presentation" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Office - OOXML - Presentation (Slide)", MediaType = "application/vnd.openxmlformats-officedocument.presentationml.slide", FileExtension = ".sldx", Details = "IANA: OOXML - Presentation" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Office - OOXML - Presentation (Slideshow)", MediaType = "application/vnd.openxmlformats-officedocument.presentationml.slideshow", FileExtension = ".ppsx", Details = "IANA: OOXML - Presentation" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Office - OOXML - Presentation Template", MediaType = "application/vnd.openxmlformats-officedocument.presentationml.template", FileExtension = ".potx", Details = "IANA: OOXML - Presentation Template" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Office - OOXML - Spreadsheet", MediaType = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", FileExtension = ".xlsx", Details = "IANA: OOXML - Spreadsheet" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Office - OOXML - Spreadsheet Template", MediaType = "application/vnd.openxmlformats-officedocument.spreadsheetml.template", FileExtension = ".xltx", Details = "IANA: OOXML - Spreadsheet Template" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Office - OOXML - Word Document", MediaType = "application/vnd.openxmlformats-officedocument.wordprocessingml.document", FileExtension = ".docx", Details = "IANA: OOXML - Word Document" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Office - OOXML - Word Document Template", MediaType = "application/vnd.openxmlformats-officedocument.wordprocessingml.template", FileExtension = ".dotx", Details = "IANA: OOXML - Word Document Template" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Office Binder", MediaType = "application/x-msbinder", FileExtension = ".obd", Details = "Wikipedia: Microsoft Shared Tools" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Office System Release Theme", MediaType = "application/vnd.ms-officetheme", FileExtension = ".thmx", Details = "IANA: MS Office System Release Theme" });
            listMimeType.Add(new MimeType() { Name = "Microsoft OneNote", MediaType = "application/onenote", FileExtension = ".onetoc", Details = "MS OneNote 2010" });
            listMimeType.Add(new MimeType() { Name = "Microsoft PlayReady Ecosystem", MediaType = "audio/vnd.ms-playready.media.pya", FileExtension = ".pya", Details = "IANA: Microsoft PlayReady Ecosystem" });
            listMimeType.Add(new MimeType() { Name = "Microsoft PlayReady Ecosystem Video", MediaType = "video/vnd.ms-playready.media.pyv", FileExtension = ".pyv", Details = "IANA: Microsoft PlayReady Ecosystem" });
            listMimeType.Add(new MimeType() { Name = "Microsoft PowerPoint", MediaType = "application/vnd.ms-powerpoint", FileExtension = ".ppt", Details = "IANA: MS PowerPoint" });
            listMimeType.Add(new MimeType() { Name = "Microsoft PowerPoint - Add-in file", MediaType = "application/vnd.ms-powerpoint.addin.macroenabled.12", FileExtension = ".ppam", Details = "IANA: MS PowerPoint" });
            listMimeType.Add(new MimeType() { Name = "Microsoft PowerPoint - Macro-Enabled Open XML Slide", MediaType = "application/vnd.ms-powerpoint.slide.macroenabled.12", FileExtension = ".sldm", Details = "IANA: MS PowerPoint" });
            listMimeType.Add(new MimeType() { Name = "Microsoft PowerPoint - Macro-Enabled Presentation File", MediaType = "application/vnd.ms-powerpoint.presentation.macroenabled.12", FileExtension = ".pptm", Details = "IANA: MS PowerPoint" });
            listMimeType.Add(new MimeType() { Name = "Microsoft PowerPoint - Macro-Enabled Slide Show File", MediaType = "application/vnd.ms-powerpoint.slideshow.macroenabled.12", FileExtension = ".ppsm", Details = "IANA: MS PowerPoint" });
            listMimeType.Add(new MimeType() { Name = "Microsoft PowerPoint - Macro-Enabled Template File", MediaType = "application/vnd.ms-powerpoint.template.macroenabled.12", FileExtension = ".potm", Details = "IANA: MS PowerPoint" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Project", MediaType = "application/vnd.ms-project", FileExtension = ".mpp", Details = "IANA: MS PowerPoint" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Publisher", MediaType = "application/x-mspublisher", FileExtension = ".pub", Details = "Wikipedia: Microsoft Publisher" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Schedule+", MediaType = "application/x-msschedule", FileExtension = ".scd", Details = "Wikipedia: Microsoft Schedule Plus" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Silverlight", MediaType = "application/x-silverlight-app", FileExtension = ".xap", Details = "Wikipedia: Silverlight" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Trust UI Provider - Certificate Trust Link", MediaType = "application/vnd.ms-pki.stl", FileExtension = ".stl", Details = "IANA: MS Trust UI Provider" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Trust UI Provider - Security Catalog", MediaType = "application/vnd.ms-pki.seccat", FileExtension = ".cat", Details = "IANA: MS Trust UI Provider" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Visio", MediaType = "application/vnd.visio", FileExtension = ".vsd", Details = "IANA: Visio" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Visio 2013", MediaType = "application/vnd.visio2013", FileExtension = ".vsdx", Details = "IANA: Visio" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Windows Media", MediaType = "video/x-ms-wm", FileExtension = ".wm", Details = "Wikipedia: Advanced Systems Format (ASF)" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Windows Media Audio", MediaType = "audio/x-ms-wma", FileExtension = ".wma", Details = "Wikipedia: Windows Media Audio" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Windows Media Audio Redirector", MediaType = "audio/x-ms-wax", FileExtension = ".wax", Details = "Windows Media Metafiles" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Windows Media Audio/Video Playlist", MediaType = "video/x-ms-wmx", FileExtension = ".wmx", Details = "Wikipedia: Advanced Systems Format (ASF)" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Windows Media Player Download Package", MediaType = "application/x-ms-wmd", FileExtension = ".wmd", Details = "Wikipedia: Windows Media Player" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Windows Media Player Playlist", MediaType = "application/vnd.ms-wpl", FileExtension = ".wpl", Details = "IANA: MS Windows Media Player Playlist" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Windows Media Player Skin Package", MediaType = "application/x-ms-wmz", FileExtension = ".wmz", Details = "Wikipedia: Windows Media Player" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Windows Media Video", MediaType = "video/x-ms-wmv", FileExtension = ".wmv", Details = "Wikipedia: Advanced Systems Format (ASF)" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Windows Media Video Playlist", MediaType = "video/x-ms-wvx", FileExtension = ".wvx", Details = "Wikipedia: Advanced Systems Format (ASF)" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Windows Metafile", MediaType = "application/x-msmetafile", FileExtension = ".wmf", Details = "Wikipedia: Windows Metafile" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Windows Terminal Services", MediaType = "application/x-msterminal", FileExtension = ".trm", Details = "Wikipedia: Terminal Server" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Word", MediaType = "application/msword", FileExtension = ".doc", Details = "Wikipedia: Microsoft Word" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Word - Macro-Enabled Document", MediaType = "application/vnd.ms-word.document.macroenabled.12", FileExtension = ".docm", Details = "IANA: MS Word" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Word - Macro-Enabled Template", MediaType = "application/vnd.ms-word.template.macroenabled.12", FileExtension = ".dotm", Details = "IANA: MS Word" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Wordpad", MediaType = "application/x-mswrite", FileExtension = ".wri", Details = "Wikipedia: Wordpad" });
            listMimeType.Add(new MimeType() { Name = "Microsoft Works", MediaType = "application/vnd.ms-works", FileExtension = ".wps", Details = "IANA: MS Works" });
            listMimeType.Add(new MimeType() { Name = "Microsoft XAML Browser Application", MediaType = "application/x-ms-xbap", FileExtension = ".xbap", Details = "Wikipedia: XAML Browser" });
            listMimeType.Add(new MimeType() { Name = "Microsoft XML Paper Specification", MediaType = "application/vnd.ms-xpsdocument", FileExtension = ".xps", Details = "IANA: MS XML Paper Specification" });
            listMimeType.Add(new MimeType() { Name = "MIDI - Musical Instrument Digital Interface", MediaType = "audio/midi", FileExtension = ".mid", Details = "Wikipedia: MIDI" });
            listMimeType.Add(new MimeType() { Name = "MiniPay", MediaType = "application/vnd.ibm.minipay", FileExtension = ".mpy", Details = "IANA: MiniPay" });
            listMimeType.Add(new MimeType() { Name = "MO:DCA-P", MediaType = "application/vnd.ibm.modcap", FileExtension = ".afp", Details = "IANA: MO:DCA-P" });
            listMimeType.Add(new MimeType() { Name = "Mobile Information Device Profile", MediaType = "application/vnd.jcp.javame.midlet-rms", FileExtension = ".rms", Details = "IANA: Mobile Information Device Profile" });
            listMimeType.Add(new MimeType() { Name = "MobileTV", MediaType = "application/vnd.tmobile-livetv", FileExtension = ".tmo", Details = "IANA: MobileTV" });
            listMimeType.Add(new MimeType() { Name = "Mobipocket", MediaType = "application/x-mobipocket-ebook", FileExtension = ".prc", Details = "Wikipedia: Mobipocket" });
            listMimeType.Add(new MimeType() { Name = "Mobius Management Systems - Basket file", MediaType = "application/vnd.mobius.mbk", FileExtension = ".mbk", Details = "IANA: Mobius Management Systems" });
            listMimeType.Add(new MimeType() { Name = "Mobius Management Systems - Distribution Database", MediaType = "application/vnd.mobius.dis", FileExtension = ".dis", Details = "IANA: Mobius Management Systems" });
            listMimeType.Add(new MimeType() { Name = "Mobius Management Systems - Policy Definition Language File", MediaType = "application/vnd.mobius.plc", FileExtension = ".plc", Details = "IANA: Mobius Management Systems" });
            listMimeType.Add(new MimeType() { Name = "Mobius Management Systems - Query File", MediaType = "application/vnd.mobius.mqy", FileExtension = ".mqy", Details = "IANA: Mobius Management Systems" });
            listMimeType.Add(new MimeType() { Name = "Mobius Management Systems - Script Language", MediaType = "application/vnd.mobius.msl", FileExtension = ".msl", Details = "IANA: Mobius Management Systems" });
            listMimeType.Add(new MimeType() { Name = "Mobius Management Systems - Topic Index File", MediaType = "application/vnd.mobius.txf", FileExtension = ".txf", Details = "IANA: Mobius Management Systems" });
            listMimeType.Add(new MimeType() { Name = "Mobius Management Systems - UniversalArchive", MediaType = "application/vnd.mobius.daf", FileExtension = ".daf", Details = "IANA: Mobius Management Systems" });
            listMimeType.Add(new MimeType() { Name = "mod_fly / fly.cgi", MediaType = "text/vnd.fly", FileExtension = ".fly", Details = "IANA: Fly" });
            listMimeType.Add(new MimeType() { Name = "Mophun Certificate", MediaType = "application/vnd.mophun.certificate", FileExtension = ".mpc", Details = "IANA: Mophun Certificate" });
            listMimeType.Add(new MimeType() { Name = "Mophun VM", MediaType = "application/vnd.mophun.application", FileExtension = ".mpn", Details = "IANA: Mophun VM" });
            listMimeType.Add(new MimeType() { Name = "Motion JPEG 2000", MediaType = "video/mj2", FileExtension = ".mj2", Details = "IANA: MJ2" });
            listMimeType.Add(new MimeType() { Name = "MPEG Audio", MediaType = "audio/mpeg", FileExtension = ".mpga", Details = "Wikipedia: MPGA" });
            listMimeType.Add(new MimeType() { Name = "MPEG Url", MediaType = "video/vnd.mpegurl", FileExtension = ".mxu", Details = "IANA: MPEG Url" });
            listMimeType.Add(new MimeType() { Name = "MPEG Video", MediaType = "video/mpeg", FileExtension = ".mpeg", Details = "Wikipedia: MPEG" });
            listMimeType.Add(new MimeType() { Name = "MPEG-21", MediaType = "application/mp21", FileExtension = ".m21", Details = "Wikipedia: MPEG-21" });
            listMimeType.Add(new MimeType() { Name = "MPEG-4 Audio", MediaType = "audio/mp4", FileExtension = ".mp4a", Details = "Wikipedia: MP4A" });
            listMimeType.Add(new MimeType() { Name = "MPEG-4 Video", MediaType = "video/mp4", FileExtension = ".mp4", Details = "Wikipedia: MP4" });
            listMimeType.Add(new MimeType() { Name = "Multimedia Playlist Unicode", MediaType = "application/vnd.apple.mpegurl", FileExtension = ".m3u8", Details = "Wikipedia: M3U" });
            listMimeType.Add(new MimeType() { Name = "MUsical Score Interpreted Code Invented for the ASCII designation of Notation", MediaType = "application/vnd.musician", FileExtension = ".mus", Details = "IANA: MUSICIAN" });
            listMimeType.Add(new MimeType() { Name = "Muvee Automatic Video Editing", MediaType = "application/vnd.muvee.style", FileExtension = ".msty", Details = "IANA: Muvee" });
            listMimeType.Add(new MimeType() { Name = "MXML", MediaType = "application/xv+xml", FileExtension = ".mxml", Details = "Wikipedia: MXML" });
            listMimeType.Add(new MimeType() { Name = "N-Gage Game Data", MediaType = "application/vnd.nokia.n-gage.data", FileExtension = ".ngdat", Details = "IANA: N-Gage Game Data" });
            listMimeType.Add(new MimeType() { Name = "N-Gage Game Installer", MediaType = "application/vnd.nokia.n-gage.symbian.install", FileExtension = ".n-gage", Details = "IANA: N-Gage Game Installer" });
            listMimeType.Add(new MimeType() { Name = "Navigation Control file for XML (for ePub)", MediaType = "application/x-dtbncx+xml", FileExtension = ".ncx", Details = "Wikipedia: EPUB" });
            listMimeType.Add(new MimeType() { Name = "Network Common Data Form (NetCDF)", MediaType = "application/x-netcdf", FileExtension = ".nc", Details = "Wikipedia: NetCDF" });
            listMimeType.Add(new MimeType() { Name = "neuroLanguage", MediaType = "application/vnd.neurolanguage.nlu", FileExtension = ".nlu", Details = "IANA: neuroLanguage" });
            listMimeType.Add(new MimeType() { Name = "New Moon Liftoff/DNA", MediaType = "application/vnd.dna", FileExtension = ".dna", Details = "IANA: New Moon Liftoff/DNA" });
            listMimeType.Add(new MimeType() { Name = "NobleNet Directory", MediaType = "application/vnd.noblenet-directory", FileExtension = ".nnd", Details = "IANA: NobleNet Directory" });
            listMimeType.Add(new MimeType() { Name = "NobleNet Sealer", MediaType = "application/vnd.noblenet-sealer", FileExtension = ".nns", Details = "IANA: NobleNet Sealer" });
            listMimeType.Add(new MimeType() { Name = "NobleNet Web", MediaType = "application/vnd.noblenet-web", FileExtension = ".nnw", Details = "IANA: NobleNet Web" });
            listMimeType.Add(new MimeType() { Name = "Nokia Radio Application - Preset", MediaType = "application/vnd.nokia.radio-preset", FileExtension = ".rpst", Details = "IANA: Nokia Radio Application" });
            listMimeType.Add(new MimeType() { Name = "Nokia Radio Application - Preset", MediaType = "application/vnd.nokia.radio-presets", FileExtension = ".rpss", Details = "IANA: Nokia Radio Application" });
            listMimeType.Add(new MimeType() { Name = "Notation3", MediaType = "text/n3", FileExtension = ".n3", Details = "Wikipedia: Notation3" });
            listMimeType.Add(new MimeType() { Name = "Novadigm's RADIA and EDM products", MediaType = "application/vnd.novadigm.edm", FileExtension = ".edm", Details = "IANA: Novadigm's RADIA and EDM products" });
            listMimeType.Add(new MimeType() { Name = "Novadigm's RADIA and EDM products", MediaType = "application/vnd.novadigm.edx", FileExtension = ".edx", Details = "IANA: Novadigm's RADIA and EDM products" });
            listMimeType.Add(new MimeType() { Name = "Novadigm's RADIA and EDM products", MediaType = "application/vnd.novadigm.ext", FileExtension = ".ext", Details = "IANA: Novadigm's RADIA and EDM products" });
            listMimeType.Add(new MimeType() { Name = "NpGraphIt", MediaType = "application/vnd.flographit", FileExtension = ".gph", Details = "IANA: FloGraphIt" });
            listMimeType.Add(new MimeType() { Name = "Nuera ECELP 4800", MediaType = "audio/vnd.nuera.ecelp4800", FileExtension = ".ecelp4800", Details = "IANA: ECELP 4800" });
            listMimeType.Add(new MimeType() { Name = "Nuera ECELP 7470", MediaType = "audio/vnd.nuera.ecelp7470", FileExtension = ".ecelp7470", Details = "IANA: ECELP 7470" });
            listMimeType.Add(new MimeType() { Name = "Nuera ECELP 9600", MediaType = "audio/vnd.nuera.ecelp9600", FileExtension = ".ecelp9600", Details = "IANA: ECELP 9600" });
            listMimeType.Add(new MimeType() { Name = "Office Document Architecture", MediaType = "application/oda", FileExtension = ".oda", Details = "RFC 2161" });
            listMimeType.Add(new MimeType() { Name = "Ogg", MediaType = "application/ogg", FileExtension = ".ogx", Details = "Wikipedia: Ogg" });
            listMimeType.Add(new MimeType() { Name = "Ogg Audio", MediaType = "audio/ogg", FileExtension = ".oga", Details = "Wikipedia: Ogg" });
            listMimeType.Add(new MimeType() { Name = "Ogg Video", MediaType = "video/ogg", FileExtension = ".ogv", Details = "Wikipedia: Ogg" });
            listMimeType.Add(new MimeType() { Name = "OMA Download Agents", MediaType = "application/vnd.oma.dd2+xml", FileExtension = ".dd2", Details = "IANA: OMA Download Agents" });
            listMimeType.Add(new MimeType() { Name = "Open Document Text Web", MediaType = "application/vnd.oasis.opendocument.text-web", FileExtension = ".oth", Details = "IANA: OpenDocument Text Web" });
            listMimeType.Add(new MimeType() { Name = "Open eBook Publication Structure", MediaType = "application/oebps-package+xml", FileExtension = ".opf", Details = "Wikipedia: Open eBook" });
            listMimeType.Add(new MimeType() { Name = "Open Financial Exchange", MediaType = "application/vnd.intu.qbo", FileExtension = ".qbo", Details = "IANA: Open Financial Exchange" });
            listMimeType.Add(new MimeType() { Name = "Open Office Extension", MediaType = "application/vnd.openofficeorg.extension", FileExtension = ".oxt", Details = "IANA: Open Office Extension" });
            listMimeType.Add(new MimeType() { Name = "Open Score Format", MediaType = "application/vnd.yamaha.openscoreformat", FileExtension = ".osf", Details = "IANA: Open Score Format" });
            listMimeType.Add(new MimeType() { Name = "Open Web Media Project - Audio", MediaType = "audio/webm", FileExtension = ".weba", Details = "WebM Project" });
            listMimeType.Add(new MimeType() { Name = "Open Web Media Project - Video", MediaType = "video/webm", FileExtension = ".webm", Details = "WebM Project" });
            listMimeType.Add(new MimeType() { Name = "OpenDocument Chart", MediaType = "application/vnd.oasis.opendocument.chart", FileExtension = ".odc", Details = "IANA: OpenDocument Chart" });
            listMimeType.Add(new MimeType() { Name = "OpenDocument Chart Template", MediaType = "application/vnd.oasis.opendocument.chart-template", FileExtension = ".otc", Details = "IANA: OpenDocument Chart Template" });
            listMimeType.Add(new MimeType() { Name = "OpenDocument Database", MediaType = "application/vnd.oasis.opendocument.database", FileExtension = ".odb", Details = "IANA: OpenDocument Database" });
            listMimeType.Add(new MimeType() { Name = "OpenDocument Formula", MediaType = "application/vnd.oasis.opendocument.formula", FileExtension = ".odf", Details = "IANA: OpenDocument Formula" });
            listMimeType.Add(new MimeType() { Name = "OpenDocument Formula Template", MediaType = "application/vnd.oasis.opendocument.formula-template", FileExtension = ".odft", Details = "IANA: OpenDocument Formula Template" });
            listMimeType.Add(new MimeType() { Name = "OpenDocument Graphics", MediaType = "application/vnd.oasis.opendocument.graphics", FileExtension = ".odg", Details = "IANA: OpenDocument Graphics" });
            listMimeType.Add(new MimeType() { Name = "OpenDocument Graphics Template", MediaType = "application/vnd.oasis.opendocument.graphics-template", FileExtension = ".otg", Details = "IANA: OpenDocument Graphics Template" });
            listMimeType.Add(new MimeType() { Name = "OpenDocument Image", MediaType = "application/vnd.oasis.opendocument.image", FileExtension = ".odi", Details = "IANA: OpenDocument Image" });
            listMimeType.Add(new MimeType() { Name = "OpenDocument Image Template", MediaType = "application/vnd.oasis.opendocument.image-template", FileExtension = ".oti", Details = "IANA: OpenDocument Image Template" });
            listMimeType.Add(new MimeType() { Name = "OpenDocument Presentation", MediaType = "application/vnd.oasis.opendocument.presentation", FileExtension = ".odp", Details = "IANA: OpenDocument Presentation" });
            listMimeType.Add(new MimeType() { Name = "OpenDocument Presentation Template", MediaType = "application/vnd.oasis.opendocument.presentation-template", FileExtension = ".otp", Details = "IANA: OpenDocument Presentation Template" });
            listMimeType.Add(new MimeType() { Name = "OpenDocument Spreadsheet", MediaType = "application/vnd.oasis.opendocument.spreadsheet", FileExtension = ".ods", Details = "IANA: OpenDocument Spreadsheet" });
            listMimeType.Add(new MimeType() { Name = "OpenDocument Spreadsheet Template", MediaType = "application/vnd.oasis.opendocument.spreadsheet-template", FileExtension = ".ots", Details = "IANA: OpenDocument Spreadsheet Template" });
            listMimeType.Add(new MimeType() { Name = "OpenDocument Text", MediaType = "application/vnd.oasis.opendocument.text", FileExtension = ".odt", Details = "IANA: OpenDocument Text" });
            listMimeType.Add(new MimeType() { Name = "OpenDocument Text Master", MediaType = "application/vnd.oasis.opendocument.text-master", FileExtension = ".odm", Details = "IANA: OpenDocument Text Master" });
            listMimeType.Add(new MimeType() { Name = "OpenDocument Text Template", MediaType = "application/vnd.oasis.opendocument.text-template", FileExtension = ".ott", Details = "IANA: OpenDocument Text Template" });
            listMimeType.Add(new MimeType() { Name = "OpenGL Textures (KTX)", MediaType = "image/ktx", FileExtension = ".ktx", Details = "KTX File Format" });
            listMimeType.Add(new MimeType() { Name = "OpenOffice - Calc (Spreadsheet)", MediaType = "application/vnd.sun.xml.calc", FileExtension = ".sxc", Details = "Wikipedia: OpenOffice" });
            listMimeType.Add(new MimeType() { Name = "OpenOffice - Calc Template (Spreadsheet)", MediaType = "application/vnd.sun.xml.calc.template", FileExtension = ".stc", Details = "Wikipedia: OpenOffice" });
            listMimeType.Add(new MimeType() { Name = "OpenOffice - Draw (Graphics)", MediaType = "application/vnd.sun.xml.draw", FileExtension = ".sxd", Details = "Wikipedia: OpenOffice" });
            listMimeType.Add(new MimeType() { Name = "OpenOffice - Draw Template (Graphics)", MediaType = "application/vnd.sun.xml.draw.template", FileExtension = ".std", Details = "Wikipedia: OpenOffice" });
            listMimeType.Add(new MimeType() { Name = "OpenOffice - Impress (Presentation)", MediaType = "application/vnd.sun.xml.impress", FileExtension = ".sxi", Details = "Wikipedia: OpenOffice" });
            listMimeType.Add(new MimeType() { Name = "OpenOffice - Impress Template (Presentation)", MediaType = "application/vnd.sun.xml.impress.template", FileExtension = ".sti", Details = "Wikipedia: OpenOffice" });
            listMimeType.Add(new MimeType() { Name = "OpenOffice - Math (Formula)", MediaType = "application/vnd.sun.xml.math", FileExtension = ".sxm", Details = "Wikipedia: OpenOffice" });
            listMimeType.Add(new MimeType() { Name = "OpenOffice - Writer (Text - HTML)", MediaType = "application/vnd.sun.xml.writer", FileExtension = ".sxw", Details = "Wikipedia: OpenOffice" });
            listMimeType.Add(new MimeType() { Name = "OpenOffice - Writer (Text - HTML)", MediaType = "application/vnd.sun.xml.writer.global", FileExtension = ".sxg", Details = "Wikipedia: OpenOffice" });
            listMimeType.Add(new MimeType() { Name = "OpenOffice - Writer Template (Text - HTML)", MediaType = "application/vnd.sun.xml.writer.template", FileExtension = ".stw", Details = "Wikipedia: OpenOffice" });
            listMimeType.Add(new MimeType() { Name = "OpenType Font File", MediaType = "application/x-font-otf", FileExtension = ".otf", Details = "OpenType Font File" });
            listMimeType.Add(new MimeType() { Name = "OSFPVG", MediaType = "application/vnd.yamaha.openscoreformat.osfpvg+xml", FileExtension = ".osfpvg", Details = "IANA: OSFPVG" });
            listMimeType.Add(new MimeType() { Name = "OSGi Deployment Package", MediaType = "application/vnd.osgi.dp", FileExtension = ".dp", Details = "IANA: OSGi Deployment Package" });
            listMimeType.Add(new MimeType() { Name = "PalmOS Data", MediaType = "application/vnd.palm", FileExtension = ".pdb", Details = "IANA: PalmOS Data" });
            listMimeType.Add(new MimeType() { Name = "Pascal Source File", MediaType = "text/x-pascal", FileExtension = ".p", Details = "Wikipedia: Pascal" });
            listMimeType.Add(new MimeType() { Name = "PawaaFILE", MediaType = "application/vnd.pawaafile", FileExtension = ".paw", Details = "IANA: PawaaFILE" });
            listMimeType.Add(new MimeType() { Name = "PCL 6 Enhanced (Formely PCL XL)", MediaType = "application/vnd.hp-pclxl", FileExtension = ".pclxl", Details = "IANA: HP PCL XL" });
            listMimeType.Add(new MimeType() { Name = "Pcsel eFIF File", MediaType = "application/vnd.picsel", FileExtension = ".efif", Details = "IANA: Picsel eFIF File" });
            listMimeType.Add(new MimeType() { Name = "PCX Image", MediaType = "image/x-pcx", FileExtension = ".pcx", Details = "Wikipedia: PCX" });
            listMimeType.Add(new MimeType() { Name = "Photoshop Document", MediaType = "image/vnd.adobe.photoshop", FileExtension = ".psd", Details = "Wikipedia: Photoshop Document" });
            listMimeType.Add(new MimeType() { Name = "PICSRules", MediaType = "application/pics-rules", FileExtension = ".prf", Details = "W3C PICSRules" });
            listMimeType.Add(new MimeType() { Name = "PICT Image", MediaType = "image/x-pict", FileExtension = ".pic", Details = "Wikipedia: PICT" });
            listMimeType.Add(new MimeType() { Name = "pIRCh", MediaType = "application/x-chat", FileExtension = ".chat", Details = "Wikipedia: pIRCh" });
            listMimeType.Add(new MimeType() { Name = "PKCS #10 - Certification Request Standard", MediaType = "application/pkcs10", FileExtension = ".p10", Details = "RFC 2986" });
            listMimeType.Add(new MimeType() { Name = "PKCS #12 - Personal Information Exchange Syntax Standard", MediaType = "application/x-pkcs12", FileExtension = ".p12", Details = "RFC 2986" });
            listMimeType.Add(new MimeType() { Name = "PKCS #7 - Cryptographic Message Syntax Standard", MediaType = "application/pkcs7-mime", FileExtension = ".p7m", Details = "RFC 2315" });
            listMimeType.Add(new MimeType() { Name = "PKCS #7 - Cryptographic Message Syntax Standard", MediaType = "application/pkcs7-signature", FileExtension = ".p7s", Details = "RFC 2315" });
            listMimeType.Add(new MimeType() { Name = "PKCS #7 - Cryptographic Message Syntax Standard (Certificate Request Response)", MediaType = "application/x-pkcs7-certreqresp", FileExtension = ".p7r", Details = "RFC 2986" });
            listMimeType.Add(new MimeType() { Name = "PKCS #7 - Cryptographic Message Syntax Standard (Certificates)", MediaType = "application/x-pkcs7-certificates", FileExtension = ".p7b", Details = "RFC 2986" });
            listMimeType.Add(new MimeType() { Name = "PKCS #8 - Private-Key Information Syntax Standard", MediaType = "application/pkcs8", FileExtension = ".p8", Details = "RFC 5208" });
            listMimeType.Add(new MimeType() { Name = "PocketLearn Viewers", MediaType = "application/vnd.pocketlearn", FileExtension = ".plf", Details = "IANA: PocketLearn Viewers" });
            listMimeType.Add(new MimeType() { Name = "Portable Anymap Image", MediaType = "image/x-portable-anymap", FileExtension = ".pnm", Details = "Wikipedia: Netpbm Format" });
            listMimeType.Add(new MimeType() { Name = "Portable Bitmap Format", MediaType = "image/x-portable-bitmap", FileExtension = ".pbm", Details = "Wikipedia: Netpbm Format" });
            listMimeType.Add(new MimeType() { Name = "Portable Compiled Format", MediaType = "application/x-font-pcf", FileExtension = ".pcf", Details = "Wikipedia: Portable Compiled Format" });
            listMimeType.Add(new MimeType() { Name = "Portable Font Resource", MediaType = "application/font-tdpfr", FileExtension = ".pfr", Details = "RFC 3073" });
            listMimeType.Add(new MimeType() { Name = "Portable Game Notation (Chess Games)", MediaType = "application/x-chess-pgn", FileExtension = ".pgn", Details = "Wikipedia: Portable Game Notationb" });
            listMimeType.Add(new MimeType() { Name = "Portable Graymap Format", MediaType = "image/x-portable-graymap", FileExtension = ".pgm", Details = "Wikipedia: Netpbm Format" });
            listMimeType.Add(new MimeType() { Name = "Portable Network Graphics (PNG)", MediaType = "image/png", FileExtension = ".png", Details = "RFC 2083" });
            listMimeType.Add(new MimeType() { Name = "Portable Pixmap Format", MediaType = "image/x-portable-pixmap", FileExtension = ".ppm", Details = "Wikipedia: Netpbm Format" });
            listMimeType.Add(new MimeType() { Name = "Portable Symmetric Key Container", MediaType = "application/pskc+xml", FileExtension = ".pskcxml", Details = "RFC 6030" });
            listMimeType.Add(new MimeType() { Name = "PosML", MediaType = "application/vnd.ctc-posml", FileExtension = ".pml", Details = "IANA: PosML" });
            listMimeType.Add(new MimeType() { Name = "PostScript", MediaType = "application/postscript", FileExtension = ".ai", Details = "Wikipedia: PostScript" });
            listMimeType.Add(new MimeType() { Name = "PostScript Fonts", MediaType = "application/x-font-type1", FileExtension = ".pfa", Details = "Wikipedia: PostScript Fonts" });
            listMimeType.Add(new MimeType() { Name = "PowerBuilder", MediaType = "application/vnd.powerbuilder6", FileExtension = ".pbd", Details = "IANA: PowerBuilder" });
            listMimeType.Add(new MimeType() { Name = "Pretty Good Privacy", MediaType = "application/pgp-encrypted", FileExtension = ".pgp", Details = "RFC 2015" });
            listMimeType.Add(new MimeType() { Name = "Preview Systems ZipLock/VBox", MediaType = "application/vnd.previewsystems.box", FileExtension = ".box", Details = "IANA: Preview Systems ZipLock/Vbox" });
            listMimeType.Add(new MimeType() { Name = "Princeton Video Image", MediaType = "application/vnd.pvi.ptid1", FileExtension = ".ptid", Details = "IANA: Princeton Video Image" });
            listMimeType.Add(new MimeType() { Name = "Pronunciation Lexicon Specification", MediaType = "application/pls+xml", FileExtension = ".pls", Details = "RFC 4267" });
            listMimeType.Add(new MimeType() { Name = "Proprietary P&G Standard Reporting System", MediaType = "application/vnd.pg.format", FileExtension = ".str", Details = "IANA: Proprietary P&G Standard Reporting System" });
            listMimeType.Add(new MimeType() { Name = "Proprietary P&G Standard Reporting System", MediaType = "application/vnd.pg.osasli", FileExtension = ".ei6", Details = "IANA: Proprietary P&G Standard Reporting System" });
            listMimeType.Add(new MimeType() { Name = "PRS Lines Tag", MediaType = "text/prs.lines.tag", FileExtension = ".dsc", Details = "IANA: PRS Lines Tag" });
            listMimeType.Add(new MimeType() { Name = "PSF Fonts", MediaType = "application/x-font-linux-psf", FileExtension = ".psf", Details = "PSF Fonts" });
            listMimeType.Add(new MimeType() { Name = "PubliShare Objects", MediaType = "application/vnd.publishare-delta-tree", FileExtension = ".qps", Details = "IANA: PubliShare Objects" });
            listMimeType.Add(new MimeType() { Name = "Qualcomm's Plaza Mobile Internet", MediaType = "application/vnd.pmi.widget", FileExtension = ".wg", Details = "IANA: Qualcomm's Plaza Mobile Internet" });
            listMimeType.Add(new MimeType() { Name = "QuarkXpress", MediaType = "application/vnd.quark.quarkxpress", FileExtension = ".qxd", Details = "IANA: QuarkXPress" });
            listMimeType.Add(new MimeType() { Name = "QUASS Stream Player", MediaType = "application/vnd.epson.esf", FileExtension = ".esf", Details = "IANA: QUASS Stream Player" });
            listMimeType.Add(new MimeType() { Name = "QUASS Stream Player", MediaType = "application/vnd.epson.msf", FileExtension = ".msf", Details = "IANA: QUASS Stream Player" });
            listMimeType.Add(new MimeType() { Name = "QUASS Stream Player", MediaType = "application/vnd.epson.ssf", FileExtension = ".ssf", Details = "IANA: QUASS Stream Player" });
            listMimeType.Add(new MimeType() { Name = "QuickAnime Player", MediaType = "application/vnd.epson.quickanime", FileExtension = ".qam", Details = "IANA: QuickAnime Player" });
            listMimeType.Add(new MimeType() { Name = "Quicken", MediaType = "application/vnd.intu.qfx", FileExtension = ".qfx", Details = "IANA: Quicken" });
            listMimeType.Add(new MimeType() { Name = "Quicktime Video", MediaType = "video/quicktime", FileExtension = ".qt", Details = "Wikipedia: Quicktime" });
            listMimeType.Add(new MimeType() { Name = "RAR Archive", MediaType = "application/x-rar-compressed", FileExtension = ".rar", Details = "Wikipedia: RAR" });
            listMimeType.Add(new MimeType() { Name = "Real Audio Sound", MediaType = "audio/x-pn-realaudio", FileExtension = ".ram", Details = "Wikipedia: RealPlayer" });
            listMimeType.Add(new MimeType() { Name = "Real Audio Sound", MediaType = "audio/x-pn-realaudio-plugin", FileExtension = ".rmp", Details = "Wikipedia: RealPlayer" });
            listMimeType.Add(new MimeType() { Name = "Really Simple Discovery", MediaType = "application/rsd+xml", FileExtension = ".rsd", Details = "Wikipedia: Really Simple Discovery" });
            listMimeType.Add(new MimeType() { Name = "RealMedia", MediaType = "application/vnd.rn-realmedia", FileExtension = ".rm", Details = "" });
            listMimeType.Add(new MimeType() { Name = "RealVNC", MediaType = "application/vnd.realvnc.bed", FileExtension = ".bed", Details = "IANA: RealVNC" });
            listMimeType.Add(new MimeType() { Name = "Recordare Applications", MediaType = "application/vnd.recordare.musicxml", FileExtension = ".mxl", Details = "IANA: Recordare Apps" });
            listMimeType.Add(new MimeType() { Name = "Recordare Applications", MediaType = "application/vnd.recordare.musicxml+xml", FileExtension = ".musicxml", Details = "IANA: Recordare Apps" });
            listMimeType.Add(new MimeType() { Name = "Relax NG Compact Syntax", MediaType = "application/relax-ng-compact-syntax", FileExtension = ".rnc", Details = "Relax NG" });
            listMimeType.Add(new MimeType() { Name = "RemoteDocs R-Viewer", MediaType = "application/vnd.data-vision.rdz", FileExtension = ".rdz", Details = "IANA: Data-Vision" });
            listMimeType.Add(new MimeType() { Name = "Resource Description Framework", MediaType = "application/rdf+xml", FileExtension = ".rdf", Details = "RFC 3870" });
            listMimeType.Add(new MimeType() { Name = "RetroPlatform Player", MediaType = "application/vnd.cloanto.rp9", FileExtension = ".rp9", Details = "IANA: RetroPlatform Player" });
            listMimeType.Add(new MimeType() { Name = "RhymBox", MediaType = "application/vnd.jisp", FileExtension = ".jisp", Details = "IANA: RhymBox" });
            listMimeType.Add(new MimeType() { Name = "Rich Text Format", MediaType = "application/rtf", FileExtension = ".rtf", Details = "Wikipedia: Rich Text Format" });
            listMimeType.Add(new MimeType() { Name = "Rich Text Format (RTF)", MediaType = "text/richtext", FileExtension = ".rtx", Details = "Wikipedia: Rich Text Format" });
            listMimeType.Add(new MimeType() { Name = "ROUTE 66 Location Based Services", MediaType = "application/vnd.route66.link66+xml", FileExtension = ".link66", Details = "IANA: ROUTE 66" });
            listMimeType.Add(new MimeType() { Name = "RSS - Really Simple Syndication", MediaType = "application/rss+xml", FileExtension = ".rss, .xml", Details = "Wikipedia: RSS" });
            listMimeType.Add(new MimeType() { Name = "S Hexdump Format", MediaType = "application/shf+xml", FileExtension = ".shf", Details = "RFC 4194" });
            listMimeType.Add(new MimeType() { Name = "SailingTracker", MediaType = "application/vnd.sailingtracker.track", FileExtension = ".st", Details = "IANA: SailingTracker" });
            listMimeType.Add(new MimeType() { Name = "Scalable Vector Graphics (SVG)", MediaType = "image/svg+xml", FileExtension = ".svg", Details = "Wikipedia: SVG" });
            listMimeType.Add(new MimeType() { Name = "ScheduleUs", MediaType = "application/vnd.sus-calendar", FileExtension = ".sus", Details = "IANA: ScheduleUs" });
            listMimeType.Add(new MimeType() { Name = "Search/Retrieve via URL Response Format", MediaType = "application/sru+xml", FileExtension = ".sru", Details = "RFC 6207" });
            listMimeType.Add(new MimeType() { Name = "Secure Electronic Transaction - Payment", MediaType = "application/set-payment-initiation", FileExtension = ".setpay", Details = "IANA: SET Payment" });
            listMimeType.Add(new MimeType() { Name = "Secure Electronic Transaction - Registration", MediaType = "application/set-registration-initiation", FileExtension = ".setreg", Details = "IANA: SET Registration" });
            listMimeType.Add(new MimeType() { Name = "Secured eMail", MediaType = "application/vnd.sema", FileExtension = ".sema", Details = "IANA: Secured eMail" });
            listMimeType.Add(new MimeType() { Name = "Secured eMail", MediaType = "application/vnd.semd", FileExtension = ".semd", Details = "IANA: Secured eMail" });
            listMimeType.Add(new MimeType() { Name = "Secured eMail", MediaType = "application/vnd.semf", FileExtension = ".semf", Details = "IANA: Secured eMail" });
            listMimeType.Add(new MimeType() { Name = "SeeMail", MediaType = "application/vnd.seemail", FileExtension = ".see", Details = "IANA: SeeMail" });
            listMimeType.Add(new MimeType() { Name = "Server Normal Format", MediaType = "application/x-font-snf", FileExtension = ".snf", Details = "Wikipedia: Server Normal Format" });
            listMimeType.Add(new MimeType() { Name = "Server-Based Certificate Validation Protocol - Validation Policies - Request", MediaType = "application/scvp-vp-request", FileExtension = ".spq", Details = "RFC 5055" });
            listMimeType.Add(new MimeType() { Name = "Server-Based Certificate Validation Protocol - Validation Policies - Response", MediaType = "application/scvp-vp-response", FileExtension = ".spp", Details = "RFC 5055" });
            listMimeType.Add(new MimeType() { Name = "Server-Based Certificate Validation Protocol - Validation Request", MediaType = "application/scvp-cv-request", FileExtension = ".scq", Details = "RFC 5055" });
            listMimeType.Add(new MimeType() { Name = "Server-Based Certificate Validation Protocol - Validation Response", MediaType = "application/scvp-cv-response", FileExtension = ".scs", Details = "RFC 5055" });
            listMimeType.Add(new MimeType() { Name = "Session Description Protocol", MediaType = "application/sdp", FileExtension = ".sdp", Details = "RFC 2327" });
            listMimeType.Add(new MimeType() { Name = "Setext", MediaType = "text/x-setext", FileExtension = ".etx", Details = "Wikipedia: Setext" });
            listMimeType.Add(new MimeType() { Name = "SGI Movie", MediaType = "video/x-sgi-movie", FileExtension = ".movie", Details = "SGI Facts" });
            listMimeType.Add(new MimeType() { Name = "Shana Informed Filler", MediaType = "application/vnd.shana.informed.formdata", FileExtension = ".ifm", Details = "IANA: Shana Informed Filler" });
            listMimeType.Add(new MimeType() { Name = "Shana Informed Filler", MediaType = "application/vnd.shana.informed.formtemplate", FileExtension = ".itp", Details = "IANA: Shana Informed Filler" });
            listMimeType.Add(new MimeType() { Name = "Shana Informed Filler", MediaType = "application/vnd.shana.informed.interchange", FileExtension = ".iif", Details = "IANA: Shana Informed Filler" });
            listMimeType.Add(new MimeType() { Name = "Shana Informed Filler", MediaType = "application/vnd.shana.informed.package", FileExtension = ".ipk", Details = "IANA: Shana Informed Filler" });
            listMimeType.Add(new MimeType() { Name = "Sharing Transaction Fraud Data", MediaType = "application/thraud+xml", FileExtension = ".tfi", Details = "RFC 5941" });
            listMimeType.Add(new MimeType() { Name = "Shell Archive", MediaType = "application/x-shar", FileExtension = ".shar", Details = "Wikipedia: Shell Archie" });
            listMimeType.Add(new MimeType() { Name = "Silicon Graphics RGB Bitmap", MediaType = "image/x-rgb", FileExtension = ".rgb", Details = "RGB Image Format" });
            listMimeType.Add(new MimeType() { Name = "SimpleAnimeLite Player", MediaType = "application/vnd.epson.salt", FileExtension = ".slt", Details = "IANA: SimpleAnimeLite Player" });
            listMimeType.Add(new MimeType() { Name = "Simply Accounting", MediaType = "application/vnd.accpac.simply.aso", FileExtension = ".aso", Details = "IANA: Simply Accounting" });
            listMimeType.Add(new MimeType() { Name = "Simply Accounting - Data Import", MediaType = "application/vnd.accpac.simply.imp", FileExtension = ".imp", Details = "IANA: Simply Accounting" });
            listMimeType.Add(new MimeType() { Name = "SimTech MindMapper", MediaType = "application/vnd.simtech-mindmapper", FileExtension = ".twd", Details = "IANA: SimTech MindMapper" });
            listMimeType.Add(new MimeType() { Name = "Sixth Floor Media - CommonSpace", MediaType = "application/vnd.commonspace", FileExtension = ".csp", Details = "IANA: CommonSpace" });
            listMimeType.Add(new MimeType() { Name = "SMAF Audio", MediaType = "application/vnd.yamaha.smaf-audio", FileExtension = ".saf", Details = "IANA: SMAF Audio" });
            listMimeType.Add(new MimeType() { Name = "SMAF File", MediaType = "application/vnd.smaf", FileExtension = ".mmf", Details = "IANA: SMAF File" });
            listMimeType.Add(new MimeType() { Name = "SMAF Phrase", MediaType = "application/vnd.yamaha.smaf-phrase", FileExtension = ".spf", Details = "IANA: SMAF Phrase" });
            listMimeType.Add(new MimeType() { Name = "SMART Technologies Apps", MediaType = "application/vnd.smart.teacher", FileExtension = ".teacher", Details = "IANA: SMART Technologies Apps" });
            listMimeType.Add(new MimeType() { Name = "SourceView Document", MediaType = "application/vnd.svd", FileExtension = ".svd", Details = "IANA: SourceView Document" });
            listMimeType.Add(new MimeType() { Name = "SPARQL - Query", MediaType = "application/sparql-query", FileExtension = ".rq", Details = "W3C SPARQL" });
            listMimeType.Add(new MimeType() { Name = "SPARQL - Results", MediaType = "application/sparql-results+xml", FileExtension = ".srx", Details = "W3C SPARQL" });
            listMimeType.Add(new MimeType() { Name = "Speech Recognition Grammar Specification", MediaType = "application/srgs", FileExtension = ".gram", Details = "W3C Speech Grammar" });
            listMimeType.Add(new MimeType() { Name = "Speech Recognition Grammar Specification - XML", MediaType = "application/srgs+xml", FileExtension = ".grxml", Details = "W3C Speech Grammar" });
            listMimeType.Add(new MimeType() { Name = "Speech Synthesis Markup Language", MediaType = "application/ssml+xml", FileExtension = ".ssml", Details = "W3C Speech Synthesis" });
            listMimeType.Add(new MimeType() { Name = "SSEYO Koan Play File", MediaType = "application/vnd.koan", FileExtension = ".skp", Details = "IANA: SSEYO Koan Play File" });
            listMimeType.Add(new MimeType() { Name = "Standard Generalized Markup Language (SGML)", MediaType = "text/sgml", FileExtension = ".sgml", Details = "Wikipedia: SGML" });
            listMimeType.Add(new MimeType() { Name = "StarOffice - Calc", MediaType = "application/vnd.stardivision.calc", FileExtension = ".sdc", Details = "" });
            listMimeType.Add(new MimeType() { Name = "StarOffice - Draw", MediaType = "application/vnd.stardivision.draw", FileExtension = ".sda", Details = "" });
            listMimeType.Add(new MimeType() { Name = "StarOffice - Impress", MediaType = "application/vnd.stardivision.impress", FileExtension = ".sdd", Details = "" });
            listMimeType.Add(new MimeType() { Name = "StarOffice - Math", MediaType = "application/vnd.stardivision.math", FileExtension = ".smf", Details = "" });
            listMimeType.Add(new MimeType() { Name = "StarOffice - Writer", MediaType = "application/vnd.stardivision.writer", FileExtension = ".sdw", Details = "" });
            listMimeType.Add(new MimeType() { Name = "StarOffice - Writer (Global)", MediaType = "application/vnd.stardivision.writer-global", FileExtension = ".sgl", Details = "" });
            listMimeType.Add(new MimeType() { Name = "StepMania", MediaType = "application/vnd.stepmania.stepchart", FileExtension = ".sm", Details = "IANA: StepMania" });
            listMimeType.Add(new MimeType() { Name = "Stuffit Archive", MediaType = "application/x-stuffit", FileExtension = ".sit", Details = "Wikipedia: Stuffit" });
            listMimeType.Add(new MimeType() { Name = "Stuffit Archive", MediaType = "application/x-stuffitx", FileExtension = ".sitx", Details = "Wikipedia: Stuffit" });
            listMimeType.Add(new MimeType() { Name = "SudokuMagic", MediaType = "application/vnd.solent.sdkm+xml", FileExtension = ".sdkm", Details = "IANA: SudokuMagic" });
            listMimeType.Add(new MimeType() { Name = "Sugar Linux Application Bundle", MediaType = "application/vnd.olpc-sugar", FileExtension = ".xo", Details = "IANA: Sugar Linux App Bundle" });
            listMimeType.Add(new MimeType() { Name = "Sun Audio - Au file format", MediaType = "audio/basic", FileExtension = ".au", Details = "Wikipedia: Sun audio" });
            listMimeType.Add(new MimeType() { Name = "SundaHus WQ", MediaType = "application/vnd.wqd", FileExtension = ".wqd", Details = "IANA: SundaHus WQ" });
            listMimeType.Add(new MimeType() { Name = "Symbian Install Package", MediaType = "application/vnd.symbian.install", FileExtension = ".sis", Details = "IANA: Symbian Install" });
            listMimeType.Add(new MimeType() { Name = "Synchronized Multimedia Integration Language", MediaType = "application/smil+xml", FileExtension = ".smi", Details = "RFC 4536" });
            listMimeType.Add(new MimeType() { Name = "SyncML", MediaType = "application/vnd.syncml+xml", FileExtension = ".xsm", Details = "IANA: SyncML" });
            listMimeType.Add(new MimeType() { Name = "SyncML - Device Management", MediaType = "application/vnd.syncml.dm+wbxml", FileExtension = ".bdm", Details = "IANA: SyncML" });
            listMimeType.Add(new MimeType() { Name = "SyncML - Device Management", MediaType = "application/vnd.syncml.dm+xml", FileExtension = ".xdm", Details = "IANA: SyncML" });
            listMimeType.Add(new MimeType() { Name = "System V Release 4 CPIO Archive", MediaType = "application/x-sv4cpio", FileExtension = ".sv4cpio", Details = "Wikipedia: pax" });
            listMimeType.Add(new MimeType() { Name = "System V Release 4 CPIO Checksum Data", MediaType = "application/x-sv4crc", FileExtension = ".sv4crc", Details = "Wikipedia: pax" });
            listMimeType.Add(new MimeType() { Name = "Systems Biology Markup Language", MediaType = "application/sbml+xml", FileExtension = ".sbml", Details = "RFC 3823" });
            listMimeType.Add(new MimeType() { Name = "Tab Seperated Values", MediaType = "text/tab-separated-values", FileExtension = ".tsv", Details = "Wikipedia: TSV" });
            listMimeType.Add(new MimeType() { Name = "Tagged Image File Format", MediaType = "image/tiff", FileExtension = ".tiff", Details = "Wikipedia: TIFF" });
            listMimeType.Add(new MimeType() { Name = "Tao Intent", MediaType = "application/vnd.tao.intent-module-archive", FileExtension = ".tao", Details = "IANA: Tao Intent" });
            listMimeType.Add(new MimeType() { Name = "Tar File (Tape Archive)", MediaType = "application/x-tar", FileExtension = ".tar", Details = "Wikipedia: Tar" });
            listMimeType.Add(new MimeType() { Name = "Tcl Script", MediaType = "application/x-tcl", FileExtension = ".tcl", Details = "Wikipedia: Tcl" });
            listMimeType.Add(new MimeType() { Name = "TeX", MediaType = "application/x-tex", FileExtension = ".tex", Details = "Wikipedia: TeX" });
            listMimeType.Add(new MimeType() { Name = "TeX Font Metric", MediaType = "application/x-tex-tfm", FileExtension = ".tfm", Details = "Wikipedia: TeX Font Metric" });
            listMimeType.Add(new MimeType() { Name = "Text Encoding and Interchange", MediaType = "application/tei+xml", FileExtension = ".tei", Details = "RFC 6129" });
            listMimeType.Add(new MimeType() { Name = "Text File", MediaType = "text/plain", FileExtension = ".txt", Details = "Wikipedia: Text File" });
            listMimeType.Add(new MimeType() { Name = "TIBCO Spotfire", MediaType = "application/vnd.spotfire.dxp", FileExtension = ".dxp", Details = "IANA: TIBCO Spotfire" });
            listMimeType.Add(new MimeType() { Name = "TIBCO Spotfire", MediaType = "application/vnd.spotfire.sfs", FileExtension = ".sfs", Details = "IANA: TIBCO Spotfire" });
            listMimeType.Add(new MimeType() { Name = "Time Stamped Data Envelope", MediaType = "application/timestamped-data", FileExtension = ".tsd", Details = "RFC 5955" });
            listMimeType.Add(new MimeType() { Name = "TRI Systems Config", MediaType = "application/vnd.trid.tpt", FileExtension = ".tpt", Details = "IANA: TRI Systems" });
            listMimeType.Add(new MimeType() { Name = "Triscape Map Explorer", MediaType = "application/vnd.triscape.mxs", FileExtension = ".mxs", Details = "IANA: Triscape Map Explorer" });
            listMimeType.Add(new MimeType() { Name = "troff", MediaType = "text/troff", FileExtension = ".t", Details = "Wikipedia: troff" });
            listMimeType.Add(new MimeType() { Name = "True BASIC", MediaType = "application/vnd.trueapp", FileExtension = ".tra", Details = "IANA: True BASIC" });
            listMimeType.Add(new MimeType() { Name = "TrueType Font", MediaType = "application/x-font-ttf", FileExtension = ".ttf", Details = "Wikipedia: TrueType" });
            listMimeType.Add(new MimeType() { Name = "Turtle (Terse RDF Triple Language)", MediaType = "text/turtle", FileExtension = ".ttl", Details = "Wikipedia: Turtle" });
            listMimeType.Add(new MimeType() { Name = "UMAJIN", MediaType = "application/vnd.umajin", FileExtension = ".umj", Details = "IANA: UMAJIN" });
            listMimeType.Add(new MimeType() { Name = "Unique Object Markup Language", MediaType = "application/vnd.uoml+xml", FileExtension = ".uoml", Details = "IANA: UOML" });
            listMimeType.Add(new MimeType() { Name = "Unity 3d", MediaType = "application/vnd.unity", FileExtension = ".unityweb", Details = "IANA: Unity 3d" });
            listMimeType.Add(new MimeType() { Name = "Universal Forms Description Language", MediaType = "application/vnd.ufdl", FileExtension = ".ufd", Details = "IANA: Universal Forms Description Language" });
            listMimeType.Add(new MimeType() { Name = "URI Resolution Services", MediaType = "text/uri-list", FileExtension = ".uri", Details = "RFC 2483" });
            listMimeType.Add(new MimeType() { Name = "User Interface Quartz - Theme (Symbian)", MediaType = "application/vnd.uiq.theme", FileExtension = ".utz", Details = "IANA: User Interface Quartz" });
            listMimeType.Add(new MimeType() { Name = "Ustar (Uniform Standard Tape Archive)", MediaType = "application/x-ustar", FileExtension = ".ustar", Details = "Wikipedia: Ustar" });
            listMimeType.Add(new MimeType() { Name = "UUEncode", MediaType = "text/x-uuencode", FileExtension = ".uu", Details = "Wikipedia: UUEncode" });
            listMimeType.Add(new MimeType() { Name = "vCalendar", MediaType = "text/x-vcalendar", FileExtension = ".vcs", Details = "Wikipedia: vCalendar" });
            listMimeType.Add(new MimeType() { Name = "vCard", MediaType = "text/x-vcard", FileExtension = ".vcf", Details = "Wikipedia: vCard" });
            listMimeType.Add(new MimeType() { Name = "Video CD", MediaType = "application/x-cdlink", FileExtension = ".vcd", Details = "Wikipedia: Video CD" });
            listMimeType.Add(new MimeType() { Name = "Viewport+", MediaType = "application/vnd.vsf", FileExtension = ".vsf", Details = "IANA: Viewport+" });
            listMimeType.Add(new MimeType() { Name = "Virtual Reality Modeling Language", MediaType = "model/vrml", FileExtension = ".wrl", Details = "Wikipedia: VRML" });
            listMimeType.Add(new MimeType() { Name = "VirtualCatalog", MediaType = "application/vnd.vcx", FileExtension = ".vcx", Details = "IANA: VirtualCatalog" });
            listMimeType.Add(new MimeType() { Name = "Virtue MTS", MediaType = "model/vnd.mts", FileExtension = ".mts", Details = "IANA: MTS" });
            listMimeType.Add(new MimeType() { Name = "Virtue VTU", MediaType = "model/vnd.vtu", FileExtension = ".vtu", Details = "IANA: VTU" });
            listMimeType.Add(new MimeType() { Name = "Visionary", MediaType = "application/vnd.visionary", FileExtension = ".vis", Details = "IANA: Visionary" });
            listMimeType.Add(new MimeType() { Name = "Vivo", MediaType = "video/vnd.vivo", FileExtension = ".viv", Details = "IANA: Vivo" });
            listMimeType.Add(new MimeType() { Name = "Voice Browser Call Control", MediaType = "application/ccxml+xml,", FileExtension = ".ccxml", Details = "Voice Browser Call Control: CCXML Version 1.0" });
            listMimeType.Add(new MimeType() { Name = "VoiceXML", MediaType = "application/voicexml+xml", FileExtension = ".vxml", Details = "RFC 4267" });
            listMimeType.Add(new MimeType() { Name = "WAIS Source", MediaType = "application/x-wais-source", FileExtension = ".src", Details = "YoLinux" });
            listMimeType.Add(new MimeType() { Name = "WAP Binary XML (WBXML)", MediaType = "application/vnd.wap.wbxml", FileExtension = ".wbxml", Details = "IANA: WBXML" });
            listMimeType.Add(new MimeType() { Name = "WAP Bitamp (WBMP)", MediaType = "image/vnd.wap.wbmp", FileExtension = ".wbmp", Details = "IANA: WBMP" });
            listMimeType.Add(new MimeType() { Name = "Waveform Audio File Format (WAV)", MediaType = "audio/x-wav", FileExtension = ".wav", Details = "Wikipedia: WAV" });
            listMimeType.Add(new MimeType() { Name = "Web Distributed Authoring and Versioning", MediaType = "application/davmount+xml", FileExtension = ".davmount", Details = "RFC 4918" });
            listMimeType.Add(new MimeType() { Name = "Web Open Font Format", MediaType = "application/x-font-woff", FileExtension = ".woff", Details = "Wikipedia: Web Open Font Format" });
            listMimeType.Add(new MimeType() { Name = "Web Services Policy", MediaType = "application/wspolicy+xml", FileExtension = ".wspolicy", Details = "W3C Web Services Policy" });
            listMimeType.Add(new MimeType() { Name = "WebP Image", MediaType = "image/webp", FileExtension = ".webp", Details = "Wikipedia: WebP" });
            listMimeType.Add(new MimeType() { Name = "WebTurbo", MediaType = "application/vnd.webturbo", FileExtension = ".wtb", Details = "IANA: WebTurbo" });
            listMimeType.Add(new MimeType() { Name = "Widget Packaging and XML Configuration", MediaType = "application/widget", FileExtension = ".wgt", Details = "W3C Widget Packaging and XML Configuration" });
            listMimeType.Add(new MimeType() { Name = "WinHelp", MediaType = "application/winhlp", FileExtension = ".hlp", Details = "Wikipedia: WinHelp" });
            listMimeType.Add(new MimeType() { Name = "Wireless Markup Language (WML)", MediaType = "text/vnd.wap.wml", FileExtension = ".wml", Details = "Wikipedia: WML" });
            listMimeType.Add(new MimeType() { Name = "Wireless Markup Language Script (WMLScript)", MediaType = "text/vnd.wap.wmlscript", FileExtension = ".wmls", Details = "Wikipedia: WMLScript" });
            listMimeType.Add(new MimeType() { Name = "WMLScript", MediaType = "application/vnd.wap.wmlscriptc", FileExtension = ".wmlsc", Details = "IANA: WMLScript" });
            listMimeType.Add(new MimeType() { Name = "Wordperfect", MediaType = "application/vnd.wordperfect", FileExtension = ".wpd", Details = "IANA: Wordperfect" });
            listMimeType.Add(new MimeType() { Name = "Worldtalk", MediaType = "application/vnd.wt.stf", FileExtension = ".stf", Details = "IANA: Worldtalk" });
            listMimeType.Add(new MimeType() { Name = "WSDL - Web Services Description Language", MediaType = "application/wsdl+xml", FileExtension = ".wsdl", Details = "W3C Web Service Description Language" });
            listMimeType.Add(new MimeType() { Name = "X BitMap", MediaType = "image/x-xbitmap", FileExtension = ".xbm", Details = "Wikipedia: X BitMap" });
            listMimeType.Add(new MimeType() { Name = "X PixMap", MediaType = "image/x-xpixmap", FileExtension = ".xpm", Details = "Wikipedia: X PixMap" });
            listMimeType.Add(new MimeType() { Name = "X Window Dump", MediaType = "image/x-xwindowdump", FileExtension = ".xwd", Details = "Wikipedia: X Window Dump" });
            listMimeType.Add(new MimeType() { Name = "X.509 Certificate", MediaType = "application/x-x509-ca-cert", FileExtension = ".der", Details = "Wikipedia: X.509" });
            listMimeType.Add(new MimeType() { Name = "Xfig", MediaType = "application/x-xfig", FileExtension = ".fig", Details = "Wikipedia: Xfig" });
            listMimeType.Add(new MimeType() { Name = "XHTML - The Extensible HyperText Markup Language", MediaType = "application/xhtml+xml", FileExtension = ".xhtml", Details = "W3C XHTML" });
            listMimeType.Add(new MimeType() { Name = "XML - Extensible Markup Language", MediaType = "application/xml", FileExtension = ".xml", Details = "W3C XML" });
            listMimeType.Add(new MimeType() { Name = "XML Configuration Access Protocol - XCAP Diff", MediaType = "application/xcap-diff+xml", FileExtension = ".xdf", Details = "Wikipedia: XCAP" });
            listMimeType.Add(new MimeType() { Name = "XML Encryption Syntax and Processing", MediaType = "application/xenc+xml", FileExtension = ".xenc", Details = "W3C XML Encryption Syntax and Processing" });
            listMimeType.Add(new MimeType() { Name = "XML Patch Framework", MediaType = "application/patch-ops-error+xml", FileExtension = ".xer", Details = "RFC 5261" });
            listMimeType.Add(new MimeType() { Name = "XML Resource Lists", MediaType = "application/resource-lists+xml", FileExtension = ".rl", Details = "RFC 4826" });
            listMimeType.Add(new MimeType() { Name = "XML Resource Lists", MediaType = "application/rls-services+xml", FileExtension = ".rs", Details = "RFC 4826" });
            listMimeType.Add(new MimeType() { Name = "XML Resource Lists Diff", MediaType = "application/resource-lists-diff+xml", FileExtension = ".rld", Details = "RFC 4826" });
            listMimeType.Add(new MimeType() { Name = "XML Transformations", MediaType = "application/xslt+xml", FileExtension = ".xslt", Details = "W3C XSLT" });
            listMimeType.Add(new MimeType() { Name = "XML-Binary Optimized Packaging", MediaType = "application/xop+xml", FileExtension = ".xop", Details = "W3C XOP" });
            listMimeType.Add(new MimeType() { Name = "XPInstall - Mozilla", MediaType = "application/x-xpinstall", FileExtension = ".xpi", Details = "Wikipedia: XPI" });
            listMimeType.Add(new MimeType() { Name = "XSPF - XML Shareable Playlist Format", MediaType = "application/xspf+xml", FileExtension = ".xspf", Details = "XML Shareable Playlist Format" });
            listMimeType.Add(new MimeType() { Name = "XUL - XML User Interface Language", MediaType = "application/vnd.mozilla.xul+xml", FileExtension = ".xul", Details = "IANA: XUL" });
            listMimeType.Add(new MimeType() { Name = "XYZ File Format", MediaType = "chemical/x-xyz", FileExtension = ".xyz", Details = "Wikipedia: XYZ File Format" });
            listMimeType.Add(new MimeType() { Name = "YAML Ain't Markup Language / Yet Another Markup Language", MediaType = "text/yaml", FileExtension = ".yaml", Details = "YAML: YAML Ain't Markup Language" });
            listMimeType.Add(new MimeType() { Name = "YANG Data Modeling Language", MediaType = "application/yang", FileExtension = ".yang", Details = "Wikipedia: YANG" });
            listMimeType.Add(new MimeType() { Name = "YIN (YANG - XML)", MediaType = "application/yin+xml", FileExtension = ".yin", Details = "Wikipedia: YANG" });
            listMimeType.Add(new MimeType() { Name = "Z.U.L. Geometry", MediaType = "application/vnd.zul", FileExtension = ".zir", Details = "IANA: Z.U.L." });
            listMimeType.Add(new MimeType() { Name = "Zip Archive", MediaType = "application/zip", FileExtension = ".zip", Details = "Wikipedia: Zip" });
            listMimeType.Add(new MimeType() { Name = "ZVUE Media Manager", MediaType = "application/vnd.handheld-entertainment+xml", FileExtension = ".zmm", Details = "IANA: ZVUE Media Manager" });
            listMimeType.Add(new MimeType() { Name = "Zzazz Deck", MediaType = "application/vnd.zzazz.deck+xml", FileExtension = ".zaz", Details = "IANA: Zzazz" });

            return listMimeType;
        }
    }
}
